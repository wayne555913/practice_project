ARM GAS  /tmp/cc6OjwEV.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"USART_OPERATION.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata.OFFSET_TAB_CCMRx,"a"
  18              		.align	2
  21              	OFFSET_TAB_CCMRx:
  22 0000 00000000 		.ascii	"\000\000\000\000\004\004\004"
  22      040404
  23              		.section	.rodata.SHIFT_TAB_OCxx,"a"
  24              		.align	2
  27              	SHIFT_TAB_OCxx:
  28 0000 00000800 		.ascii	"\000\000\010\000\000\000\010"
  28      000008
  29              		.section	.rodata.SHIFT_TAB_ICxx,"a"
  30              		.align	2
  33              	SHIFT_TAB_ICxx:
  34 0000 00000800 		.ascii	"\000\000\010\000\000\000\010"
  34      000008
  35              		.section	.rodata.SHIFT_TAB_CCxP,"a"
  36              		.align	2
  39              	SHIFT_TAB_CCxP:
  40 0000 00020406 		.ascii	"\000\002\004\006\010\012\014"
  40      080A0C
  41              		.section	.rodata.SHIFT_TAB_OISx,"a"
  42              		.align	2
  45              	SHIFT_TAB_OISx:
  46 0000 00010203 		.ascii	"\000\001\002\003\004\005\006"
  46      040506
  47              		.section	.text.Data_Inspect_By_StateMachine,"ax",%progbits
  48              		.align	1
  49              		.global	Data_Inspect_By_StateMachine
  50              		.syntax unified
  51              		.thumb
  52              		.thumb_func
  54              	Data_Inspect_By_StateMachine:
  55              	.LFB263:
  56              		.file 1 "Core/Src/USART_OPERATION.c"
   1:Core/Src/USART_OPERATION.c **** #include "USART_OPERATION.h"
   2:Core/Src/USART_OPERATION.c **** #include <stdarg.h>
   3:Core/Src/USART_OPERATION.c **** #include <stdio.h>
   4:Core/Src/USART_OPERATION.c **** 
   5:Core/Src/USART_OPERATION.c **** // int s_printf(unsigned char str,...)
   6:Core/Src/USART_OPERATION.c **** // {
   7:Core/Src/USART_OPERATION.c **** 
ARM GAS  /tmp/cc6OjwEV.s 			page 2


   8:Core/Src/USART_OPERATION.c **** 
   9:Core/Src/USART_OPERATION.c **** //     // va_list args;
  10:Core/Src/USART_OPERATION.c **** 
  11:Core/Src/USART_OPERATION.c **** 
  12:Core/Src/USART_OPERATION.c **** //     // va_start(args,str);
  13:Core/Src/USART_OPERATION.c ****     
  14:Core/Src/USART_OPERATION.c **** //     // int value = va_arg(args,int);
  15:Core/Src/USART_OPERATION.c **** 
  16:Core/Src/USART_OPERATION.c **** //     // //HAL_UART_Transmit(&huart1,usart_temp1,7,1000);
  17:Core/Src/USART_OPERATION.c **** 
  18:Core/Src/USART_OPERATION.c **** //     // va_end(args); 
  19:Core/Src/USART_OPERATION.c **** 
  20:Core/Src/USART_OPERATION.c **** //     // if(value == 97)
  21:Core/Src/USART_OPERATION.c **** //     // {
  22:Core/Src/USART_OPERATION.c **** 
  23:Core/Src/USART_OPERATION.c **** //     // }
  24:Core/Src/USART_OPERATION.c **** // }
  25:Core/Src/USART_OPERATION.c **** 
  26:Core/Src/USART_OPERATION.c **** void Data_Inspect_By_StateMachine(TIM_HandleTypeDef *htim,uint8_t *buffer,uint8_t *Output_Data,uint
  27:Core/Src/USART_OPERATION.c **** {
  57              		.loc 1 27 1
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 24
  60              		@ frame_needed = 1, uses_anonymous_args = 0
  61 0000 80B5     		push	{r7, lr}
  62              	.LCFI0:
  63              		.cfi_def_cfa_offset 8
  64              		.cfi_offset 7, -8
  65              		.cfi_offset 14, -4
  66 0002 86B0     		sub	sp, sp, #24
  67              	.LCFI1:
  68              		.cfi_def_cfa_offset 32
  69 0004 00AF     		add	r7, sp, #0
  70              	.LCFI2:
  71              		.cfi_def_cfa_register 7
  72 0006 F860     		str	r0, [r7, #12]
  73 0008 B960     		str	r1, [r7, #8]
  74 000a 7A60     		str	r2, [r7, #4]
  75 000c 3B60     		str	r3, [r7]
  28:Core/Src/USART_OPERATION.c ****     static uint8_t state =0;
  29:Core/Src/USART_OPERATION.c ****     static uint8_t cnt = 0;
  30:Core/Src/USART_OPERATION.c **** 
  31:Core/Src/USART_OPERATION.c ****     switch (state)
  76              		.loc 1 31 5
  77 000e 464B     		ldr	r3, .L16
  78 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  79 0012 002B     		cmp	r3, #0
  80 0014 02D0     		beq	.L2
  81 0016 012B     		cmp	r3, #1
  82 0018 16D0     		beq	.L3
  83 001a 82E0     		b	.L1
  84              	.L2:
  32:Core/Src/USART_OPERATION.c ****     {
  33:Core/Src/USART_OPERATION.c ****     case 0:                      ///////////state 0
  34:Core/Src/USART_OPERATION.c ****         /* code */
  35:Core/Src/USART_OPERATION.c ****         if(*buffer != 0xaf)      //////////judge if reveive the start single
  85              		.loc 1 35 12
ARM GAS  /tmp/cc6OjwEV.s 			page 3


  86 001c BB68     		ldr	r3, [r7, #8]
  87 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  88              		.loc 1 35 11
  89 0020 AF2B     		cmp	r3, #175
  90 0022 03D0     		beq	.L5
  36:Core/Src/USART_OPERATION.c ****         {
  37:Core/Src/USART_OPERATION.c ****             state =0;
  91              		.loc 1 37 19
  92 0024 404B     		ldr	r3, .L16
  93 0026 0022     		movs	r2, #0
  94 0028 1A70     		strb	r2, [r3]
  38:Core/Src/USART_OPERATION.c ****         }
  39:Core/Src/USART_OPERATION.c ****         else
  40:Core/Src/USART_OPERATION.c ****         {
  41:Core/Src/USART_OPERATION.c ****             state =1;
  42:Core/Src/USART_OPERATION.c ****             // htim->Instance->SR =0;
  43:Core/Src/USART_OPERATION.c ****             HAL_TIM_Base_Start_IT(htim);////open timer
  44:Core/Src/USART_OPERATION.c ****             htim->Instance->CNT=0;
  45:Core/Src/USART_OPERATION.c ****             *exceed_time_flag =0;
  46:Core/Src/USART_OPERATION.c ****         }
  47:Core/Src/USART_OPERATION.c ****         break;
  95              		.loc 1 47 9
  96 002a 7AE0     		b	.L1
  97              	.L5:
  41:Core/Src/USART_OPERATION.c ****             // htim->Instance->SR =0;
  98              		.loc 1 41 19
  99 002c 3E4B     		ldr	r3, .L16
 100 002e 0122     		movs	r2, #1
 101 0030 1A70     		strb	r2, [r3]
  43:Core/Src/USART_OPERATION.c ****             htim->Instance->CNT=0;
 102              		.loc 1 43 13
 103 0032 F868     		ldr	r0, [r7, #12]
 104 0034 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
  44:Core/Src/USART_OPERATION.c ****             *exceed_time_flag =0;
 105              		.loc 1 44 17
 106 0038 FB68     		ldr	r3, [r7, #12]
 107 003a 1B68     		ldr	r3, [r3]
  44:Core/Src/USART_OPERATION.c ****             *exceed_time_flag =0;
 108              		.loc 1 44 32
 109 003c 0022     		movs	r2, #0
 110 003e 5A62     		str	r2, [r3, #36]
  45:Core/Src/USART_OPERATION.c ****         }
 111              		.loc 1 45 31
 112 0040 3B68     		ldr	r3, [r7]
 113 0042 0022     		movs	r2, #0
 114 0044 1A70     		strb	r2, [r3]
 115              		.loc 1 47 9
 116 0046 6CE0     		b	.L1
 117              	.L3:
  48:Core/Src/USART_OPERATION.c ****     case 1:                       ///////////state 1
  49:Core/Src/USART_OPERATION.c ****         if((cnt < data_length)&&(*exceed_time_flag == 0))
 118              		.loc 1 49 17
 119 0048 384B     		ldr	r3, .L16+4
 120 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 121              		.loc 1 49 11
 122 004c 062B     		cmp	r3, #6
 123 004e 12D8     		bhi	.L7
ARM GAS  /tmp/cc6OjwEV.s 			page 4


 124              		.loc 1 49 34 discriminator 1
 125 0050 3B68     		ldr	r3, [r7]
 126 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 127              		.loc 1 49 31 discriminator 1
 128 0054 002B     		cmp	r3, #0
 129 0056 0ED1     		bne	.L7
  50:Core/Src/USART_OPERATION.c ****         {
  51:Core/Src/USART_OPERATION.c ****             *(Output_Data+cnt) = *buffer;
 130              		.loc 1 51 26
 131 0058 344B     		ldr	r3, .L16+4
 132 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 133 005c 1A46     		mov	r2, r3
 134 005e 7B68     		ldr	r3, [r7, #4]
 135 0060 1344     		add	r3, r3, r2
 136              		.loc 1 51 34
 137 0062 BA68     		ldr	r2, [r7, #8]
 138 0064 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 139              		.loc 1 51 32
 140 0066 1A70     		strb	r2, [r3]
  52:Core/Src/USART_OPERATION.c ****             cnt++;
 141              		.loc 1 52 16
 142 0068 304B     		ldr	r3, .L16+4
 143 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 144 006c 0133     		adds	r3, r3, #1
 145 006e DAB2     		uxtb	r2, r3
 146 0070 2E4B     		ldr	r3, .L16+4
 147 0072 1A70     		strb	r2, [r3]
  53:Core/Src/USART_OPERATION.c ****         }
  54:Core/Src/USART_OPERATION.c ****         else if ((cnt >= data_length)&&(*exceed_time_flag == 0))
  55:Core/Src/USART_OPERATION.c ****         {
  56:Core/Src/USART_OPERATION.c ****             if(*buffer == 0XEF)
  57:Core/Src/USART_OPERATION.c ****             {
  58:Core/Src/USART_OPERATION.c ****                 state =0;
  59:Core/Src/USART_OPERATION.c ****                 cnt =0;
  60:Core/Src/USART_OPERATION.c ****                 HAL_TIM_Base_Stop_IT(htim);  //////////close timer
  61:Core/Src/USART_OPERATION.c ****                 return;
  62:Core/Src/USART_OPERATION.c ****             }
  63:Core/Src/USART_OPERATION.c ****             else
  64:Core/Src/USART_OPERATION.c ****             {
  65:Core/Src/USART_OPERATION.c ****                 for(uint8_t i =0;i < cnt;i++)
  66:Core/Src/USART_OPERATION.c ****                 {
  67:Core/Src/USART_OPERATION.c ****                     *(Output_Data+i) = 0;
  68:Core/Src/USART_OPERATION.c ****                 }
  69:Core/Src/USART_OPERATION.c ****                 HAL_TIM_Base_Stop_IT(htim);//////////close timer
  70:Core/Src/USART_OPERATION.c ****                 state =0;
  71:Core/Src/USART_OPERATION.c ****                 cnt = 0;
  72:Core/Src/USART_OPERATION.c ****                 return;
  73:Core/Src/USART_OPERATION.c ****             }
  74:Core/Src/USART_OPERATION.c ****                 *exceed_time_flag =0;
  75:Core/Src/USART_OPERATION.c ****         }
  76:Core/Src/USART_OPERATION.c ****         else if ((cnt < data_length)&&(*exceed_time_flag == 1))
  77:Core/Src/USART_OPERATION.c ****         {
  78:Core/Src/USART_OPERATION.c ****                 for(uint8_t i =0;i < cnt;i++)
  79:Core/Src/USART_OPERATION.c ****                 {
  80:Core/Src/USART_OPERATION.c ****                     *(Output_Data+i) = 0;
  81:Core/Src/USART_OPERATION.c ****                 }
  82:Core/Src/USART_OPERATION.c **** 
ARM GAS  /tmp/cc6OjwEV.s 			page 5


  83:Core/Src/USART_OPERATION.c ****                 *exceed_time_flag =0;
  84:Core/Src/USART_OPERATION.c ****                 HAL_TIM_Base_Stop_IT(htim);//////////close timer
  85:Core/Src/USART_OPERATION.c ****                 state =0;
  86:Core/Src/USART_OPERATION.c ****                 cnt = 0;
  87:Core/Src/USART_OPERATION.c ****                 return;
  88:Core/Src/USART_OPERATION.c ****         }
  89:Core/Src/USART_OPERATION.c **** 
  90:Core/Src/USART_OPERATION.c ****         break;
 148              		.loc 1 90 9
 149 0074 54E0     		b	.L15
 150              	.L7:
  54:Core/Src/USART_OPERATION.c ****         {
 151              		.loc 1 54 23
 152 0076 2D4B     		ldr	r3, .L16+4
 153 0078 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  54:Core/Src/USART_OPERATION.c ****         {
 154              		.loc 1 54 17
 155 007a 062B     		cmp	r3, #6
 156 007c 2BD9     		bls	.L9
  54:Core/Src/USART_OPERATION.c ****         {
 157              		.loc 1 54 41 discriminator 1
 158 007e 3B68     		ldr	r3, [r7]
 159 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  54:Core/Src/USART_OPERATION.c ****         {
 160              		.loc 1 54 38 discriminator 1
 161 0082 002B     		cmp	r3, #0
 162 0084 27D1     		bne	.L9
  56:Core/Src/USART_OPERATION.c ****             {
 163              		.loc 1 56 16
 164 0086 BB68     		ldr	r3, [r7, #8]
 165 0088 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  56:Core/Src/USART_OPERATION.c ****             {
 166              		.loc 1 56 15
 167 008a EF2B     		cmp	r3, #239
 168 008c 09D1     		bne	.L10
  58:Core/Src/USART_OPERATION.c ****                 cnt =0;
 169              		.loc 1 58 23
 170 008e 264B     		ldr	r3, .L16
 171 0090 0022     		movs	r2, #0
 172 0092 1A70     		strb	r2, [r3]
  59:Core/Src/USART_OPERATION.c ****                 HAL_TIM_Base_Stop_IT(htim);  //////////close timer
 173              		.loc 1 59 21
 174 0094 254B     		ldr	r3, .L16+4
 175 0096 0022     		movs	r2, #0
 176 0098 1A70     		strb	r2, [r3]
  60:Core/Src/USART_OPERATION.c ****                 return;
 177              		.loc 1 60 17
 178 009a F868     		ldr	r0, [r7, #12]
 179 009c FFF7FEFF 		bl	HAL_TIM_Base_Stop_IT
  61:Core/Src/USART_OPERATION.c ****             }
 180              		.loc 1 61 17
 181 00a0 3FE0     		b	.L1
 182              	.L10:
 183              	.LBB2:
  65:Core/Src/USART_OPERATION.c ****                 {
 184              		.loc 1 65 29
 185 00a2 0023     		movs	r3, #0
ARM GAS  /tmp/cc6OjwEV.s 			page 6


 186 00a4 FB75     		strb	r3, [r7, #23]
  65:Core/Src/USART_OPERATION.c ****                 {
 187              		.loc 1 65 17
 188 00a6 07E0     		b	.L11
 189              	.L12:
  67:Core/Src/USART_OPERATION.c ****                 }
 190              		.loc 1 67 34 discriminator 3
 191 00a8 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 192 00aa 7A68     		ldr	r2, [r7, #4]
 193 00ac 1344     		add	r3, r3, r2
  67:Core/Src/USART_OPERATION.c ****                 }
 194              		.loc 1 67 38 discriminator 3
 195 00ae 0022     		movs	r2, #0
 196 00b0 1A70     		strb	r2, [r3]
  65:Core/Src/USART_OPERATION.c ****                 {
 197              		.loc 1 65 43 discriminator 3
 198 00b2 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 199 00b4 0133     		adds	r3, r3, #1
 200 00b6 FB75     		strb	r3, [r7, #23]
 201              	.L11:
  65:Core/Src/USART_OPERATION.c ****                 {
 202              		.loc 1 65 36 discriminator 1
 203 00b8 1C4B     		ldr	r3, .L16+4
 204 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  65:Core/Src/USART_OPERATION.c ****                 {
 205              		.loc 1 65 17 discriminator 1
 206 00bc FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 207 00be 9A42     		cmp	r2, r3
 208 00c0 F2D3     		bcc	.L12
 209              	.LBE2:
  69:Core/Src/USART_OPERATION.c ****                 state =0;
 210              		.loc 1 69 17
 211 00c2 F868     		ldr	r0, [r7, #12]
 212 00c4 FFF7FEFF 		bl	HAL_TIM_Base_Stop_IT
  70:Core/Src/USART_OPERATION.c ****                 cnt = 0;
 213              		.loc 1 70 23
 214 00c8 174B     		ldr	r3, .L16
 215 00ca 0022     		movs	r2, #0
 216 00cc 1A70     		strb	r2, [r3]
  71:Core/Src/USART_OPERATION.c ****                 return;
 217              		.loc 1 71 21
 218 00ce 174B     		ldr	r3, .L16+4
 219 00d0 0022     		movs	r2, #0
 220 00d2 1A70     		strb	r2, [r3]
  72:Core/Src/USART_OPERATION.c ****             }
 221              		.loc 1 72 17
 222 00d4 25E0     		b	.L1
 223              	.L9:
  76:Core/Src/USART_OPERATION.c ****         {
 224              		.loc 1 76 23
 225 00d6 154B     		ldr	r3, .L16+4
 226 00d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  76:Core/Src/USART_OPERATION.c ****         {
 227              		.loc 1 76 17
 228 00da 062B     		cmp	r3, #6
 229 00dc 20D8     		bhi	.L15
  76:Core/Src/USART_OPERATION.c ****         {
ARM GAS  /tmp/cc6OjwEV.s 			page 7


 230              		.loc 1 76 40 discriminator 1
 231 00de 3B68     		ldr	r3, [r7]
 232 00e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  76:Core/Src/USART_OPERATION.c ****         {
 233              		.loc 1 76 37 discriminator 1
 234 00e2 012B     		cmp	r3, #1
 235 00e4 1CD1     		bne	.L15
 236              	.LBB3:
  78:Core/Src/USART_OPERATION.c ****                 {
 237              		.loc 1 78 29
 238 00e6 0023     		movs	r3, #0
 239 00e8 BB75     		strb	r3, [r7, #22]
  78:Core/Src/USART_OPERATION.c ****                 {
 240              		.loc 1 78 17
 241 00ea 07E0     		b	.L13
 242              	.L14:
  80:Core/Src/USART_OPERATION.c ****                 }
 243              		.loc 1 80 34 discriminator 3
 244 00ec BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 245 00ee 7A68     		ldr	r2, [r7, #4]
 246 00f0 1344     		add	r3, r3, r2
  80:Core/Src/USART_OPERATION.c ****                 }
 247              		.loc 1 80 38 discriminator 3
 248 00f2 0022     		movs	r2, #0
 249 00f4 1A70     		strb	r2, [r3]
  78:Core/Src/USART_OPERATION.c ****                 {
 250              		.loc 1 78 43 discriminator 3
 251 00f6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 252 00f8 0133     		adds	r3, r3, #1
 253 00fa BB75     		strb	r3, [r7, #22]
 254              	.L13:
  78:Core/Src/USART_OPERATION.c ****                 {
 255              		.loc 1 78 36 discriminator 1
 256 00fc 0B4B     		ldr	r3, .L16+4
 257 00fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  78:Core/Src/USART_OPERATION.c ****                 {
 258              		.loc 1 78 17 discriminator 1
 259 0100 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 260 0102 9A42     		cmp	r2, r3
 261 0104 F2D3     		bcc	.L14
 262              	.LBE3:
  83:Core/Src/USART_OPERATION.c ****                 HAL_TIM_Base_Stop_IT(htim);//////////close timer
 263              		.loc 1 83 35
 264 0106 3B68     		ldr	r3, [r7]
 265 0108 0022     		movs	r2, #0
 266 010a 1A70     		strb	r2, [r3]
  84:Core/Src/USART_OPERATION.c ****                 state =0;
 267              		.loc 1 84 17
 268 010c F868     		ldr	r0, [r7, #12]
 269 010e FFF7FEFF 		bl	HAL_TIM_Base_Stop_IT
  85:Core/Src/USART_OPERATION.c ****                 cnt = 0;
 270              		.loc 1 85 23
 271 0112 054B     		ldr	r3, .L16
 272 0114 0022     		movs	r2, #0
 273 0116 1A70     		strb	r2, [r3]
  86:Core/Src/USART_OPERATION.c ****                 return;
 274              		.loc 1 86 21
ARM GAS  /tmp/cc6OjwEV.s 			page 8


 275 0118 044B     		ldr	r3, .L16+4
 276 011a 0022     		movs	r2, #0
 277 011c 1A70     		strb	r2, [r3]
  87:Core/Src/USART_OPERATION.c ****         }
 278              		.loc 1 87 17
 279 011e 00E0     		b	.L1
 280              	.L15:
 281              		.loc 1 90 9
 282 0120 00BF     		nop
 283              	.L1:
  91:Core/Src/USART_OPERATION.c ****     }
  92:Core/Src/USART_OPERATION.c **** }
 284              		.loc 1 92 1
 285 0122 1837     		adds	r7, r7, #24
 286              	.LCFI3:
 287              		.cfi_def_cfa_offset 8
 288 0124 BD46     		mov	sp, r7
 289              	.LCFI4:
 290              		.cfi_def_cfa_register 13
 291              		@ sp needed
 292 0126 80BD     		pop	{r7, pc}
 293              	.L17:
 294              		.align	2
 295              	.L16:
 296 0128 00000000 		.word	state.2
 297 012c 00000000 		.word	cnt.1
 298              		.cfi_endproc
 299              	.LFE263:
 301              		.global	__aeabi_ui2f
 302              		.section	.text.Set_Current,"ax",%progbits
 303              		.align	1
 304              		.global	Set_Current
 305              		.syntax unified
 306              		.thumb
 307              		.thumb_func
 309              	Set_Current:
 310              	.LFB264:
  93:Core/Src/USART_OPERATION.c **** 
  94:Core/Src/USART_OPERATION.c **** 
  95:Core/Src/USART_OPERATION.c **** void Set_Current(uint8_t *data_temp,Config_Value *target)
  96:Core/Src/USART_OPERATION.c **** {
 311              		.loc 1 96 1
 312              		.cfi_startproc
 313              		@ args = 0, pretend = 0, frame = 16
 314              		@ frame_needed = 1, uses_anonymous_args = 0
 315 0000 80B5     		push	{r7, lr}
 316              	.LCFI5:
 317              		.cfi_def_cfa_offset 8
 318              		.cfi_offset 7, -8
 319              		.cfi_offset 14, -4
 320 0002 84B0     		sub	sp, sp, #16
 321              	.LCFI6:
 322              		.cfi_def_cfa_offset 24
 323 0004 00AF     		add	r7, sp, #0
 324              	.LCFI7:
 325              		.cfi_def_cfa_register 7
 326 0006 7860     		str	r0, [r7, #4]
ARM GAS  /tmp/cc6OjwEV.s 			page 9


 327 0008 3960     		str	r1, [r7]
 328              	.LBB4:
  97:Core/Src/USART_OPERATION.c ****     uint32_t temp;
  98:Core/Src/USART_OPERATION.c ****     for(int i=2;i<6;i++)
 329              		.loc 1 98 13
 330 000a 0223     		movs	r3, #2
 331 000c BB60     		str	r3, [r7, #8]
 332              		.loc 1 98 5
 333 000e 0DE0     		b	.L19
 334              	.L20:
  99:Core/Src/USART_OPERATION.c ****     {
 100:Core/Src/USART_OPERATION.c ****         temp = temp<<8;
 335              		.loc 1 100 14 discriminator 3
 336 0010 FB68     		ldr	r3, [r7, #12]
 337 0012 1B02     		lsls	r3, r3, #8
 338 0014 FB60     		str	r3, [r7, #12]
 101:Core/Src/USART_OPERATION.c ****         temp = temp + *(data_temp+i);
 339              		.loc 1 101 34 discriminator 3
 340 0016 BB68     		ldr	r3, [r7, #8]
 341 0018 7A68     		ldr	r2, [r7, #4]
 342 001a 1344     		add	r3, r3, r2
 343              		.loc 1 101 23 discriminator 3
 344 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 345 001e 1A46     		mov	r2, r3
 346              		.loc 1 101 14 discriminator 3
 347 0020 FB68     		ldr	r3, [r7, #12]
 348 0022 1344     		add	r3, r3, r2
 349 0024 FB60     		str	r3, [r7, #12]
  98:Core/Src/USART_OPERATION.c ****     {
 350              		.loc 1 98 22 discriminator 3
 351 0026 BB68     		ldr	r3, [r7, #8]
 352 0028 0133     		adds	r3, r3, #1
 353 002a BB60     		str	r3, [r7, #8]
 354              	.L19:
  98:Core/Src/USART_OPERATION.c ****     {
 355              		.loc 1 98 5 discriminator 1
 356 002c BB68     		ldr	r3, [r7, #8]
 357 002e 052B     		cmp	r3, #5
 358 0030 EEDD     		ble	.L20
 359              	.LBE4:
 102:Core/Src/USART_OPERATION.c ****     }
 103:Core/Src/USART_OPERATION.c **** 
 104:Core/Src/USART_OPERATION.c ****     target->target = temp;
 360              		.loc 1 104 20
 361 0032 F868     		ldr	r0, [r7, #12]
 362 0034 FFF7FEFF 		bl	__aeabi_ui2f
 363 0038 0246     		mov	r2, r0
 364 003a 3B68     		ldr	r3, [r7]
 365 003c 1A60     		str	r2, [r3]	@ float
 105:Core/Src/USART_OPERATION.c ****     // if(target->target == 50528340)
 106:Core/Src/USART_OPERATION.c ****     // HAL_GPIO_WritePin(GPIOD, GPIO_PIN_2, GPIO_PIN_SET);
 107:Core/Src/USART_OPERATION.c **** 
 108:Core/Src/USART_OPERATION.c **** }
 366              		.loc 1 108 1
 367 003e 00BF     		nop
 368 0040 1037     		adds	r7, r7, #16
 369              	.LCFI8:
ARM GAS  /tmp/cc6OjwEV.s 			page 10


 370              		.cfi_def_cfa_offset 8
 371 0042 BD46     		mov	sp, r7
 372              	.LCFI9:
 373              		.cfi_def_cfa_register 13
 374              		@ sp needed
 375 0044 80BD     		pop	{r7, pc}
 376              		.cfi_endproc
 377              	.LFE264:
 379              		.section	.text.Set_Interval,"ax",%progbits
 380              		.align	1
 381              		.global	Set_Interval
 382              		.syntax unified
 383              		.thumb
 384              		.thumb_func
 386              	Set_Interval:
 387              	.LFB265:
 109:Core/Src/USART_OPERATION.c **** 
 110:Core/Src/USART_OPERATION.c **** 
 111:Core/Src/USART_OPERATION.c **** void Set_Interval(uint8_t *data_temp,Config_Value *target)
 112:Core/Src/USART_OPERATION.c **** {
 388              		.loc 1 112 1
 389              		.cfi_startproc
 390              		@ args = 0, pretend = 0, frame = 16
 391              		@ frame_needed = 1, uses_anonymous_args = 0
 392              		@ link register save eliminated.
 393 0000 80B4     		push	{r7}
 394              	.LCFI10:
 395              		.cfi_def_cfa_offset 4
 396              		.cfi_offset 7, -4
 397 0002 85B0     		sub	sp, sp, #20
 398              	.LCFI11:
 399              		.cfi_def_cfa_offset 24
 400 0004 00AF     		add	r7, sp, #0
 401              	.LCFI12:
 402              		.cfi_def_cfa_register 7
 403 0006 7860     		str	r0, [r7, #4]
 404 0008 3960     		str	r1, [r7]
 405              	.LBB5:
 113:Core/Src/USART_OPERATION.c ****     uint32_t temp;
 114:Core/Src/USART_OPERATION.c ****     for(int i=2;i<6;i++)
 406              		.loc 1 114 13
 407 000a 0223     		movs	r3, #2
 408 000c BB60     		str	r3, [r7, #8]
 409              		.loc 1 114 5
 410 000e 0DE0     		b	.L22
 411              	.L23:
 115:Core/Src/USART_OPERATION.c ****     {
 116:Core/Src/USART_OPERATION.c ****         temp = temp<<8;
 412              		.loc 1 116 14 discriminator 3
 413 0010 FB68     		ldr	r3, [r7, #12]
 414 0012 1B02     		lsls	r3, r3, #8
 415 0014 FB60     		str	r3, [r7, #12]
 117:Core/Src/USART_OPERATION.c ****         temp = temp + *(data_temp+i);
 416              		.loc 1 117 34 discriminator 3
 417 0016 BB68     		ldr	r3, [r7, #8]
 418 0018 7A68     		ldr	r2, [r7, #4]
 419 001a 1344     		add	r3, r3, r2
ARM GAS  /tmp/cc6OjwEV.s 			page 11


 420              		.loc 1 117 23 discriminator 3
 421 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 422 001e 1A46     		mov	r2, r3
 423              		.loc 1 117 14 discriminator 3
 424 0020 FB68     		ldr	r3, [r7, #12]
 425 0022 1344     		add	r3, r3, r2
 426 0024 FB60     		str	r3, [r7, #12]
 114:Core/Src/USART_OPERATION.c ****     {
 427              		.loc 1 114 22 discriminator 3
 428 0026 BB68     		ldr	r3, [r7, #8]
 429 0028 0133     		adds	r3, r3, #1
 430 002a BB60     		str	r3, [r7, #8]
 431              	.L22:
 114:Core/Src/USART_OPERATION.c ****     {
 432              		.loc 1 114 5 discriminator 1
 433 002c BB68     		ldr	r3, [r7, #8]
 434 002e 052B     		cmp	r3, #5
 435 0030 EEDD     		ble	.L23
 436              	.LBE5:
 118:Core/Src/USART_OPERATION.c ****     }
 119:Core/Src/USART_OPERATION.c **** 
 120:Core/Src/USART_OPERATION.c ****     target->interval = temp;
 437              		.loc 1 120 22
 438 0032 3B68     		ldr	r3, [r7]
 439 0034 FA68     		ldr	r2, [r7, #12]
 440 0036 5A60     		str	r2, [r3, #4]
 121:Core/Src/USART_OPERATION.c ****     // if(target->interval == 50528256)
 122:Core/Src/USART_OPERATION.c ****     // HAL_GPIO_WritePin(GPIOD, GPIO_PIN_2, GPIO_PIN_SET);
 123:Core/Src/USART_OPERATION.c **** }
 441              		.loc 1 123 1
 442 0038 00BF     		nop
 443 003a 1437     		adds	r7, r7, #20
 444              	.LCFI13:
 445              		.cfi_def_cfa_offset 4
 446 003c BD46     		mov	sp, r7
 447              	.LCFI14:
 448              		.cfi_def_cfa_register 13
 449              		@ sp needed
 450 003e 80BC     		pop	{r7}
 451              	.LCFI15:
 452              		.cfi_restore 7
 453              		.cfi_def_cfa_offset 0
 454 0040 7047     		bx	lr
 455              		.cfi_endproc
 456              	.LFE265:
 458              		.section	.rodata
 459              		.align	2
 460              	.LC0:
 461 0000 4572726F 		.ascii	"Error!!!Can not receive correct data.\000"
 461      72212121 
 461      43616E20 
 461      6E6F7420 
 461      72656365 
 462              		.section	.text.ACK_Reaction,"ax",%progbits
 463              		.align	1
 464              		.global	ACK_Reaction
 465              		.syntax unified
ARM GAS  /tmp/cc6OjwEV.s 			page 12


 466              		.thumb
 467              		.thumb_func
 469              	ACK_Reaction:
 470              	.LFB266:
 124:Core/Src/USART_OPERATION.c **** 
 125:Core/Src/USART_OPERATION.c **** void ACK_Reaction(UART_HandleTypeDef *uart,uint8_t *data_temp)
 126:Core/Src/USART_OPERATION.c **** {
 471              		.loc 1 126 1
 472              		.cfi_startproc
 473              		@ args = 0, pretend = 0, frame = 16
 474              		@ frame_needed = 1, uses_anonymous_args = 0
 475 0000 80B5     		push	{r7, lr}
 476              	.LCFI16:
 477              		.cfi_def_cfa_offset 8
 478              		.cfi_offset 7, -8
 479              		.cfi_offset 14, -4
 480 0002 84B0     		sub	sp, sp, #16
 481              	.LCFI17:
 482              		.cfi_def_cfa_offset 24
 483 0004 00AF     		add	r7, sp, #0
 484              	.LCFI18:
 485              		.cfi_def_cfa_register 7
 486 0006 7860     		str	r0, [r7, #4]
 487 0008 3960     		str	r1, [r7]
 488              	.LBB6:
 127:Core/Src/USART_OPERATION.c ****     uint32_t temp;
 128:Core/Src/USART_OPERATION.c ****     // temp = *(data_temp+2);
 129:Core/Src/USART_OPERATION.c ****     // temp = temp<<8;
 130:Core/Src/USART_OPERATION.c ****     // temp = temp + *(data_temp+3);
 131:Core/Src/USART_OPERATION.c ****     // temp = temp<<8;
 132:Core/Src/USART_OPERATION.c ****     // temp = temp + *(data_temp+4);
 133:Core/Src/USART_OPERATION.c ****     // temp = temp<<8;
 134:Core/Src/USART_OPERATION.c ****     // temp = temp + *(data_temp+5);
 135:Core/Src/USART_OPERATION.c ****     for(int i=2;i<6;i++)
 489              		.loc 1 135 13
 490 000a 0223     		movs	r3, #2
 491 000c BB60     		str	r3, [r7, #8]
 492              		.loc 1 135 5
 493 000e 0DE0     		b	.L25
 494              	.L26:
 136:Core/Src/USART_OPERATION.c ****     {
 137:Core/Src/USART_OPERATION.c ****         temp = temp<<8;
 495              		.loc 1 137 14 discriminator 3
 496 0010 FB68     		ldr	r3, [r7, #12]
 497 0012 1B02     		lsls	r3, r3, #8
 498 0014 FB60     		str	r3, [r7, #12]
 138:Core/Src/USART_OPERATION.c ****         temp = temp + *(data_temp+i);
 499              		.loc 1 138 34 discriminator 3
 500 0016 BB68     		ldr	r3, [r7, #8]
 501 0018 3A68     		ldr	r2, [r7]
 502 001a 1344     		add	r3, r3, r2
 503              		.loc 1 138 23 discriminator 3
 504 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 505 001e 1A46     		mov	r2, r3
 506              		.loc 1 138 14 discriminator 3
 507 0020 FB68     		ldr	r3, [r7, #12]
 508 0022 1344     		add	r3, r3, r2
ARM GAS  /tmp/cc6OjwEV.s 			page 13


 509 0024 FB60     		str	r3, [r7, #12]
 135:Core/Src/USART_OPERATION.c ****     {
 510              		.loc 1 135 22 discriminator 3
 511 0026 BB68     		ldr	r3, [r7, #8]
 512 0028 0133     		adds	r3, r3, #1
 513 002a BB60     		str	r3, [r7, #8]
 514              	.L25:
 135:Core/Src/USART_OPERATION.c ****     {
 515              		.loc 1 135 5 discriminator 1
 516 002c BB68     		ldr	r3, [r7, #8]
 517 002e 052B     		cmp	r3, #5
 518 0030 EEDD     		ble	.L26
 519              	.LBE6:
 139:Core/Src/USART_OPERATION.c ****     }
 140:Core/Src/USART_OPERATION.c **** 
 141:Core/Src/USART_OPERATION.c ****     if((*(data_temp+1) !=0x55)||(temp !=0xAAAAAAAA))      //////judge if report repeatedly
 520              		.loc 1 141 20
 521 0032 3B68     		ldr	r3, [r7]
 522 0034 0133     		adds	r3, r3, #1
 523              		.loc 1 141 9
 524 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 525              		.loc 1 141 7
 526 0038 552B     		cmp	r3, #85
 527 003a 03D1     		bne	.L27
 528              		.loc 1 141 31 discriminator 1
 529 003c FB68     		ldr	r3, [r7, #12]
 530 003e B3F1AA3F 		cmp	r3, #-1431655766
 531 0042 06D0     		beq	.L29
 532              	.L27:
 142:Core/Src/USART_OPERATION.c ****     HAL_UART_Transmit(uart,"Error!!!Can not receive correct data.",strlen("Error!!!Can not receive 
 533              		.loc 1 142 5
 534 0044 4FF47A73 		mov	r3, #1000
 535 0048 2522     		movs	r2, #37
 536 004a 0449     		ldr	r1, .L30
 537 004c 7868     		ldr	r0, [r7, #4]
 538 004e FFF7FEFF 		bl	HAL_UART_Transmit
 539              	.L29:
 143:Core/Src/USART_OPERATION.c **** 
 144:Core/Src/USART_OPERATION.c **** }
 540              		.loc 1 144 1
 541 0052 00BF     		nop
 542 0054 1037     		adds	r7, r7, #16
 543              	.LCFI19:
 544              		.cfi_def_cfa_offset 8
 545 0056 BD46     		mov	sp, r7
 546              	.LCFI20:
 547              		.cfi_def_cfa_register 13
 548              		@ sp needed
 549 0058 80BD     		pop	{r7, pc}
 550              	.L31:
 551 005a 00BF     		.align	2
 552              	.L30:
 553 005c 00000000 		.word	.LC0
 554              		.cfi_endproc
 555              	.LFE266:
 557              		.section	.text.Function_Judge_Action,"ax",%progbits
 558              		.align	1
ARM GAS  /tmp/cc6OjwEV.s 			page 14


 559              		.global	Function_Judge_Action
 560              		.syntax unified
 561              		.thumb
 562              		.thumb_func
 564              	Function_Judge_Action:
 565              	.LFB267:
 145:Core/Src/USART_OPERATION.c **** 
 146:Core/Src/USART_OPERATION.c **** 
 147:Core/Src/USART_OPERATION.c **** void Function_Judge_Action(UART_HandleTypeDef *uart,uint8_t *data_temp,Config_Value *target)
 148:Core/Src/USART_OPERATION.c **** {
 566              		.loc 1 148 1
 567              		.cfi_startproc
 568              		@ args = 0, pretend = 0, frame = 16
 569              		@ frame_needed = 1, uses_anonymous_args = 0
 570 0000 80B5     		push	{r7, lr}
 571              	.LCFI21:
 572              		.cfi_def_cfa_offset 8
 573              		.cfi_offset 7, -8
 574              		.cfi_offset 14, -4
 575 0002 84B0     		sub	sp, sp, #16
 576              	.LCFI22:
 577              		.cfi_def_cfa_offset 24
 578 0004 00AF     		add	r7, sp, #0
 579              	.LCFI23:
 580              		.cfi_def_cfa_register 7
 581 0006 F860     		str	r0, [r7, #12]
 582 0008 B960     		str	r1, [r7, #8]
 583 000a 7A60     		str	r2, [r7, #4]
 149:Core/Src/USART_OPERATION.c ****     switch (*(data_temp+1))
 584              		.loc 1 149 24
 585 000c BB68     		ldr	r3, [r7, #8]
 586 000e 0133     		adds	r3, r3, #1
 587              		.loc 1 149 13
 588 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 589              		.loc 1 149 5
 590 0012 012B     		cmp	r3, #1
 591 0014 02D0     		beq	.L33
 592 0016 022B     		cmp	r3, #2
 593 0018 09D0     		beq	.L34
 150:Core/Src/USART_OPERATION.c ****     {
 151:Core/Src/USART_OPERATION.c ****                     //HAL_UART_Transmit(uart,"ok",strlen("ok"),1000);//receiption_success(uart,data
 152:Core/Src/USART_OPERATION.c ****        case 0X01:              ///////set the current
 153:Core/Src/USART_OPERATION.c ****             Set_Current(data_temp,target);
 154:Core/Src/USART_OPERATION.c ****             receiption_success(uart,0x01);
 155:Core/Src/USART_OPERATION.c ****             break;
 156:Core/Src/USART_OPERATION.c ****        case 0X02:              ///////set the interval
 157:Core/Src/USART_OPERATION.c ****             Set_Interval(data_temp,target);
 158:Core/Src/USART_OPERATION.c **** 
 159:Core/Src/USART_OPERATION.c ****             receiption_success(uart,0x01);
 160:Core/Src/USART_OPERATION.c ****             break;
 161:Core/Src/USART_OPERATION.c ****     //   case 0X55:              ///////receive the ACK
 162:Core/Src/USART_OPERATION.c ****     //     ACK_Reaction(data_temp);
 163:Core/Src/USART_OPERATION.c ****             break;
 164:Core/Src/USART_OPERATION.c ****       default:
 165:Core/Src/USART_OPERATION.c ****             break;
 594              		.loc 1 165 13
 595 001a 11E0     		b	.L36
ARM GAS  /tmp/cc6OjwEV.s 			page 15


 596              	.L33:
 153:Core/Src/USART_OPERATION.c ****             receiption_success(uart,0x01);
 597              		.loc 1 153 13
 598 001c 7968     		ldr	r1, [r7, #4]
 599 001e B868     		ldr	r0, [r7, #8]
 600 0020 FFF7FEFF 		bl	Set_Current
 154:Core/Src/USART_OPERATION.c ****             break;
 601              		.loc 1 154 13
 602 0024 0121     		movs	r1, #1
 603 0026 F868     		ldr	r0, [r7, #12]
 604 0028 FFF7FEFF 		bl	receiption_success
 155:Core/Src/USART_OPERATION.c ****        case 0X02:              ///////set the interval
 605              		.loc 1 155 13
 606 002c 08E0     		b	.L36
 607              	.L34:
 157:Core/Src/USART_OPERATION.c **** 
 608              		.loc 1 157 13
 609 002e 7968     		ldr	r1, [r7, #4]
 610 0030 B868     		ldr	r0, [r7, #8]
 611 0032 FFF7FEFF 		bl	Set_Interval
 159:Core/Src/USART_OPERATION.c ****             break;
 612              		.loc 1 159 13
 613 0036 0121     		movs	r1, #1
 614 0038 F868     		ldr	r0, [r7, #12]
 615 003a FFF7FEFF 		bl	receiption_success
 160:Core/Src/USART_OPERATION.c ****     //   case 0X55:              ///////receive the ACK
 616              		.loc 1 160 13
 617 003e 00BF     		nop
 618              	.L36:
 166:Core/Src/USART_OPERATION.c ****     }
 167:Core/Src/USART_OPERATION.c **** 
 168:Core/Src/USART_OPERATION.c **** }
 619              		.loc 1 168 1
 620 0040 00BF     		nop
 621 0042 1037     		adds	r7, r7, #16
 622              	.LCFI24:
 623              		.cfi_def_cfa_offset 8
 624 0044 BD46     		mov	sp, r7
 625              	.LCFI25:
 626              		.cfi_def_cfa_register 13
 627              		@ sp needed
 628 0046 80BD     		pop	{r7, pc}
 629              		.cfi_endproc
 630              	.LFE267:
 632              		.section	.text.receiption_success,"ax",%progbits
 633              		.align	1
 634              		.global	receiption_success
 635              		.syntax unified
 636              		.thumb
 637              		.thumb_func
 639              	receiption_success:
 640              	.LFB268:
 169:Core/Src/USART_OPERATION.c **** 
 170:Core/Src/USART_OPERATION.c **** 
 171:Core/Src/USART_OPERATION.c ****   void receiption_success(UART_HandleTypeDef *uart,uint8_t id)
 172:Core/Src/USART_OPERATION.c ****   {
 641              		.loc 1 172 3
ARM GAS  /tmp/cc6OjwEV.s 			page 16


 642              		.cfi_startproc
 643              		@ args = 0, pretend = 0, frame = 24
 644              		@ frame_needed = 1, uses_anonymous_args = 0
 645 0000 80B5     		push	{r7, lr}
 646              	.LCFI26:
 647              		.cfi_def_cfa_offset 8
 648              		.cfi_offset 7, -8
 649              		.cfi_offset 14, -4
 650 0002 86B0     		sub	sp, sp, #24
 651              	.LCFI27:
 652              		.cfi_def_cfa_offset 32
 653 0004 00AF     		add	r7, sp, #0
 654              	.LCFI28:
 655              		.cfi_def_cfa_register 7
 656 0006 7860     		str	r0, [r7, #4]
 657 0008 0B46     		mov	r3, r1
 658 000a FB70     		strb	r3, [r7, #3]
 173:Core/Src/USART_OPERATION.c **** 
 174:Core/Src/USART_OPERATION.c ****     uint8_t temp[]={0xaf,id,0xaa,0x55,0x55,0x55,0x55,0x00,0xef};
 659              		.loc 1 174 13
 660 000c AF23     		movs	r3, #175
 661 000e 3B73     		strb	r3, [r7, #12]
 662 0010 FB78     		ldrb	r3, [r7, #3]
 663 0012 7B73     		strb	r3, [r7, #13]
 664 0014 AA23     		movs	r3, #170
 665 0016 BB73     		strb	r3, [r7, #14]
 666 0018 5523     		movs	r3, #85
 667 001a FB73     		strb	r3, [r7, #15]
 668 001c 5523     		movs	r3, #85
 669 001e 3B74     		strb	r3, [r7, #16]
 670 0020 5523     		movs	r3, #85
 671 0022 7B74     		strb	r3, [r7, #17]
 672 0024 5523     		movs	r3, #85
 673 0026 BB74     		strb	r3, [r7, #18]
 674 0028 0023     		movs	r3, #0
 675 002a FB74     		strb	r3, [r7, #19]
 676 002c EF23     		movs	r3, #239
 677 002e 3B75     		strb	r3, [r7, #20]
 175:Core/Src/USART_OPERATION.c **** 
 176:Core/Src/USART_OPERATION.c ****      HAL_UART_Transmit(uart,temp,9,1000);
 678              		.loc 1 176 6
 679 0030 07F10C01 		add	r1, r7, #12
 680 0034 4FF47A73 		mov	r3, #1000
 681 0038 0922     		movs	r2, #9
 682 003a 7868     		ldr	r0, [r7, #4]
 683 003c FFF7FEFF 		bl	HAL_UART_Transmit
 177:Core/Src/USART_OPERATION.c ****      //us_delay(TIM7,100);
 178:Core/Src/USART_OPERATION.c **** 
 179:Core/Src/USART_OPERATION.c ****   }
 684              		.loc 1 179 3
 685 0040 00BF     		nop
 686 0042 1837     		adds	r7, r7, #24
 687              	.LCFI29:
 688              		.cfi_def_cfa_offset 8
 689 0044 BD46     		mov	sp, r7
 690              	.LCFI30:
 691              		.cfi_def_cfa_register 13
ARM GAS  /tmp/cc6OjwEV.s 			page 17


 692              		@ sp needed
 693 0046 80BD     		pop	{r7, pc}
 694              		.cfi_endproc
 695              	.LFE268:
 697              		.global	__aeabi_f2uiz
 698              		.section	.rodata
 699 0026 0000     		.align	2
 700              	.LC1:
 701 0028 AF010100 		.ascii	"\257\001\001\000\000\000\000\000\357"
 701      00000000 
 701      EF
 702              		.section	.text.auto_report_handle,"ax",%progbits
 703              		.align	1
 704              		.global	auto_report_handle
 705              		.syntax unified
 706              		.thumb
 707              		.thumb_func
 709              	auto_report_handle:
 710              	.LFB269:
 180:Core/Src/USART_OPERATION.c **** 
 181:Core/Src/USART_OPERATION.c **** 
 182:Core/Src/USART_OPERATION.c ****     void auto_report_handle(UART_HandleTypeDef *uart,Config_Value *target)
 183:Core/Src/USART_OPERATION.c ****     {
 711              		.loc 1 183 5
 712              		.cfi_startproc
 713              		@ args = 0, pretend = 0, frame = 24
 714              		@ frame_needed = 1, uses_anonymous_args = 0
 715 0000 80B5     		push	{r7, lr}
 716              	.LCFI31:
 717              		.cfi_def_cfa_offset 8
 718              		.cfi_offset 7, -8
 719              		.cfi_offset 14, -4
 720 0002 86B0     		sub	sp, sp, #24
 721              	.LCFI32:
 722              		.cfi_def_cfa_offset 32
 723 0004 00AF     		add	r7, sp, #0
 724              	.LCFI33:
 725              		.cfi_def_cfa_register 7
 726 0006 7860     		str	r0, [r7, #4]
 727 0008 3960     		str	r1, [r7]
 184:Core/Src/USART_OPERATION.c ****         static int cnt =0;
 185:Core/Src/USART_OPERATION.c **** 
 186:Core/Src/USART_OPERATION.c ****         ///report current data
 187:Core/Src/USART_OPERATION.c ****         uint8_t temp[]={0xaf,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0xef};
 728              		.loc 1 187 17
 729 000a 2F4A     		ldr	r2, .L42
 730 000c 07F10C03 		add	r3, r7, #12
 731 0010 07CA     		ldm	r2, {r0, r1, r2}
 732 0012 03C3     		stmia	r3!, {r0, r1}
 733 0014 1A70     		strb	r2, [r3]
 188:Core/Src/USART_OPERATION.c ****         temp[3] = ((uint32_t)target->target)>>24;
 734              		.loc 1 188 36
 735 0016 3B68     		ldr	r3, [r7]
 736 0018 1B68     		ldr	r3, [r3]	@ float
 737              		.loc 1 188 20
 738 001a 1846     		mov	r0, r3
 739 001c FFF7FEFF 		bl	__aeabi_f2uiz
ARM GAS  /tmp/cc6OjwEV.s 			page 18


 740 0020 0346     		mov	r3, r0
 741              		.loc 1 188 45
 742 0022 1B0E     		lsrs	r3, r3, #24
 743              		.loc 1 188 17
 744 0024 DBB2     		uxtb	r3, r3
 745 0026 FB73     		strb	r3, [r7, #15]
 189:Core/Src/USART_OPERATION.c ****         temp[4] = ((uint32_t)target->target)>>16;
 746              		.loc 1 189 36
 747 0028 3B68     		ldr	r3, [r7]
 748 002a 1B68     		ldr	r3, [r3]	@ float
 749              		.loc 1 189 20
 750 002c 1846     		mov	r0, r3
 751 002e FFF7FEFF 		bl	__aeabi_f2uiz
 752 0032 0346     		mov	r3, r0
 753              		.loc 1 189 45
 754 0034 1B0C     		lsrs	r3, r3, #16
 755              		.loc 1 189 17
 756 0036 DBB2     		uxtb	r3, r3
 757 0038 3B74     		strb	r3, [r7, #16]
 190:Core/Src/USART_OPERATION.c ****         temp[5] = ((uint32_t)target->target)>>8;
 758              		.loc 1 190 36
 759 003a 3B68     		ldr	r3, [r7]
 760 003c 1B68     		ldr	r3, [r3]	@ float
 761              		.loc 1 190 20
 762 003e 1846     		mov	r0, r3
 763 0040 FFF7FEFF 		bl	__aeabi_f2uiz
 764 0044 0346     		mov	r3, r0
 765              		.loc 1 190 45
 766 0046 1B0A     		lsrs	r3, r3, #8
 767              		.loc 1 190 17
 768 0048 DBB2     		uxtb	r3, r3
 769 004a 7B74     		strb	r3, [r7, #17]
 191:Core/Src/USART_OPERATION.c ****         temp[6] = ((uint32_t)target->target);
 770              		.loc 1 191 36
 771 004c 3B68     		ldr	r3, [r7]
 772 004e 1B68     		ldr	r3, [r3]	@ float
 773              		.loc 1 191 20
 774 0050 1846     		mov	r0, r3
 775 0052 FFF7FEFF 		bl	__aeabi_f2uiz
 776 0056 0346     		mov	r3, r0
 777              		.loc 1 191 17
 778 0058 DBB2     		uxtb	r3, r3
 779 005a BB74     		strb	r3, [r7, #18]
 192:Core/Src/USART_OPERATION.c ****         HAL_UART_Transmit(uart,temp,9,1000);
 780              		.loc 1 192 9
 781 005c 07F10C01 		add	r1, r7, #12
 782 0060 4FF47A73 		mov	r3, #1000
 783 0064 0922     		movs	r2, #9
 784 0066 7868     		ldr	r0, [r7, #4]
 785 0068 FFF7FEFF 		bl	HAL_UART_Transmit
 193:Core/Src/USART_OPERATION.c ****         //us_delay(TIM7,100);
 194:Core/Src/USART_OPERATION.c ****          ///report interval data
 195:Core/Src/USART_OPERATION.c **** 
 196:Core/Src/USART_OPERATION.c ****         if(cnt >= 1000)
 786              		.loc 1 196 16
 787 006c 174B     		ldr	r3, .L42+4
 788 006e 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cc6OjwEV.s 			page 19


 789              		.loc 1 196 11
 790 0070 B3F57A7F 		cmp	r3, #1000
 791 0074 1EDB     		blt	.L39
 197:Core/Src/USART_OPERATION.c ****         {
 198:Core/Src/USART_OPERATION.c ****             temp[3] = ((uint32_t)target->interval)>>24;
 792              		.loc 1 198 40
 793 0076 3B68     		ldr	r3, [r7]
 794 0078 5B68     		ldr	r3, [r3, #4]
 795              		.loc 1 198 51
 796 007a 1B0E     		lsrs	r3, r3, #24
 797              		.loc 1 198 21
 798 007c DBB2     		uxtb	r3, r3
 799 007e FB73     		strb	r3, [r7, #15]
 199:Core/Src/USART_OPERATION.c ****             temp[4] = ((uint32_t)target->interval)>>16;
 800              		.loc 1 199 40
 801 0080 3B68     		ldr	r3, [r7]
 802 0082 5B68     		ldr	r3, [r3, #4]
 803              		.loc 1 199 51
 804 0084 1B0C     		lsrs	r3, r3, #16
 805              		.loc 1 199 21
 806 0086 DBB2     		uxtb	r3, r3
 807 0088 3B74     		strb	r3, [r7, #16]
 200:Core/Src/USART_OPERATION.c ****             temp[5] = ((uint32_t)target->interval)>>8;
 808              		.loc 1 200 40
 809 008a 3B68     		ldr	r3, [r7]
 810 008c 5B68     		ldr	r3, [r3, #4]
 811              		.loc 1 200 51
 812 008e 1B0A     		lsrs	r3, r3, #8
 813              		.loc 1 200 21
 814 0090 DBB2     		uxtb	r3, r3
 815 0092 7B74     		strb	r3, [r7, #17]
 201:Core/Src/USART_OPERATION.c ****             temp[6] = ((uint32_t)target->interval);
 816              		.loc 1 201 40
 817 0094 3B68     		ldr	r3, [r7]
 818 0096 5B68     		ldr	r3, [r3, #4]
 819              		.loc 1 201 21
 820 0098 DBB2     		uxtb	r3, r3
 821 009a BB74     		strb	r3, [r7, #18]
 202:Core/Src/USART_OPERATION.c ****             HAL_UART_Transmit(uart,temp,9,1000); 
 822              		.loc 1 202 13
 823 009c 07F10C01 		add	r1, r7, #12
 824 00a0 4FF47A73 		mov	r3, #1000
 825 00a4 0922     		movs	r2, #9
 826 00a6 7868     		ldr	r0, [r7, #4]
 827 00a8 FFF7FEFF 		bl	HAL_UART_Transmit
 203:Core/Src/USART_OPERATION.c ****             cnt =0; 
 828              		.loc 1 203 17
 829 00ac 074B     		ldr	r3, .L42+4
 830 00ae 0022     		movs	r2, #0
 831 00b0 1A60     		str	r2, [r3]
 204:Core/Src/USART_OPERATION.c ****         }
 205:Core/Src/USART_OPERATION.c ****         else
 206:Core/Src/USART_OPERATION.c ****         {
 207:Core/Src/USART_OPERATION.c ****             cnt++;
 208:Core/Src/USART_OPERATION.c ****         }
 209:Core/Src/USART_OPERATION.c ****     }...
 832              		.loc 1 209 5
ARM GAS  /tmp/cc6OjwEV.s 			page 20


 833 00b2 04E0     		b	.L41
 834              	.L39:
 207:Core/Src/USART_OPERATION.c ****             cnt++;
 835              		.loc 1 207 16
 836 00b4 054B     		ldr	r3, .L42+4
 837 00b6 1B68     		ldr	r3, [r3]
 838 00b8 0133     		adds	r3, r3, #1
 839 00ba 044A     		ldr	r2, .L42+4
 840 00bc 1360     		str	r3, [r2]
 841              	.L41:
 842              		.loc 1 209 5
 843 00be 00BF     		nop
 844 00c0 1837     		adds	r7, r7, #24
 845              	.LCFI34:
 846              		.cfi_def_cfa_offset 8
 847 00c2 BD46     		mov	sp, r7
 848              	.LCFI35:
 849              		.cfi_def_cfa_register 13
 850              		@ sp needed
 851 00c4 80BD     		pop	{r7, pc}
 852              	.L43:
 853 00c6 00BF     		.align	2
 854              	.L42:
 855 00c8 28000000 		.word	.LC1
 856 00cc 00000000 		.word	cnt.0
 857              		.cfi_endproc
 858              	.LFE269:
 860              		.section	.bss.state.2,"aw",%nobits
 863              	state.2:
 864 0000 00       		.space	1
 865              		.section	.bss.cnt.1,"aw",%nobits
 868              	cnt.1:
 869 0000 00       		.space	1
 870              		.section	.bss.cnt.0,"aw",%nobits
 871              		.align	2
 874              	cnt.0:
 875 0000 00000000 		.space	4
 876              		.text
 877              	.Letext0:
 878              		.file 2 "/usr/local/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_default_types.h"
 879              		.file 3 "/usr/local/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h"
 880              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 881              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 882              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 883              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 884              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 885              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h"
 886              		.file 10 "Core/Inc/USART_OPERATION.h"
ARM GAS  /tmp/cc6OjwEV.s 			page 21


DEFINED SYMBOLS
                            *ABS*:0000000000000000 USART_OPERATION.c
     /tmp/cc6OjwEV.s:18     .rodata.OFFSET_TAB_CCMRx:0000000000000000 $d
     /tmp/cc6OjwEV.s:21     .rodata.OFFSET_TAB_CCMRx:0000000000000000 OFFSET_TAB_CCMRx
     /tmp/cc6OjwEV.s:24     .rodata.SHIFT_TAB_OCxx:0000000000000000 $d
     /tmp/cc6OjwEV.s:27     .rodata.SHIFT_TAB_OCxx:0000000000000000 SHIFT_TAB_OCxx
     /tmp/cc6OjwEV.s:30     .rodata.SHIFT_TAB_ICxx:0000000000000000 $d
     /tmp/cc6OjwEV.s:33     .rodata.SHIFT_TAB_ICxx:0000000000000000 SHIFT_TAB_ICxx
     /tmp/cc6OjwEV.s:36     .rodata.SHIFT_TAB_CCxP:0000000000000000 $d
     /tmp/cc6OjwEV.s:39     .rodata.SHIFT_TAB_CCxP:0000000000000000 SHIFT_TAB_CCxP
     /tmp/cc6OjwEV.s:42     .rodata.SHIFT_TAB_OISx:0000000000000000 $d
     /tmp/cc6OjwEV.s:45     .rodata.SHIFT_TAB_OISx:0000000000000000 SHIFT_TAB_OISx
     /tmp/cc6OjwEV.s:48     .text.Data_Inspect_By_StateMachine:0000000000000000 $t
     /tmp/cc6OjwEV.s:54     .text.Data_Inspect_By_StateMachine:0000000000000000 Data_Inspect_By_StateMachine
     /tmp/cc6OjwEV.s:296    .text.Data_Inspect_By_StateMachine:0000000000000128 $d
     /tmp/cc6OjwEV.s:863    .bss.state.2:0000000000000000 state.2
     /tmp/cc6OjwEV.s:868    .bss.cnt.1:0000000000000000 cnt.1
     /tmp/cc6OjwEV.s:303    .text.Set_Current:0000000000000000 $t
     /tmp/cc6OjwEV.s:309    .text.Set_Current:0000000000000000 Set_Current
     /tmp/cc6OjwEV.s:380    .text.Set_Interval:0000000000000000 $t
     /tmp/cc6OjwEV.s:386    .text.Set_Interval:0000000000000000 Set_Interval
     /tmp/cc6OjwEV.s:459    .rodata:0000000000000000 $d
     /tmp/cc6OjwEV.s:463    .text.ACK_Reaction:0000000000000000 $t
     /tmp/cc6OjwEV.s:469    .text.ACK_Reaction:0000000000000000 ACK_Reaction
     /tmp/cc6OjwEV.s:553    .text.ACK_Reaction:000000000000005c $d
     /tmp/cc6OjwEV.s:558    .text.Function_Judge_Action:0000000000000000 $t
     /tmp/cc6OjwEV.s:564    .text.Function_Judge_Action:0000000000000000 Function_Judge_Action
     /tmp/cc6OjwEV.s:639    .text.receiption_success:0000000000000000 receiption_success
     /tmp/cc6OjwEV.s:633    .text.receiption_success:0000000000000000 $t
     /tmp/cc6OjwEV.s:703    .text.auto_report_handle:0000000000000000 $t
     /tmp/cc6OjwEV.s:709    .text.auto_report_handle:0000000000000000 auto_report_handle
     /tmp/cc6OjwEV.s:855    .text.auto_report_handle:00000000000000c8 $d
     /tmp/cc6OjwEV.s:874    .bss.cnt.0:0000000000000000 cnt.0
     /tmp/cc6OjwEV.s:864    .bss.state.2:0000000000000000 $d
     /tmp/cc6OjwEV.s:869    .bss.cnt.1:0000000000000000 $d
     /tmp/cc6OjwEV.s:871    .bss.cnt.0:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_TIM_Base_Start_IT
HAL_TIM_Base_Stop_IT
__aeabi_ui2f
HAL_UART_Transmit
__aeabi_f2uiz
