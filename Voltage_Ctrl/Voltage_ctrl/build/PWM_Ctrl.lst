ARM GAS  /tmp/cc3R50AM.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"PWM_Ctrl.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata.OFFSET_TAB_CCMRx,"a"
  18              		.align	2
  21              	OFFSET_TAB_CCMRx:
  22 0000 00000000 		.ascii	"\000\000\000\000\004\004\004"
  22      040404
  23              		.section	.rodata.SHIFT_TAB_OCxx,"a"
  24              		.align	2
  27              	SHIFT_TAB_OCxx:
  28 0000 00000800 		.ascii	"\000\000\010\000\000\000\010"
  28      000008
  29              		.section	.rodata.SHIFT_TAB_ICxx,"a"
  30              		.align	2
  33              	SHIFT_TAB_ICxx:
  34 0000 00000800 		.ascii	"\000\000\010\000\000\000\010"
  34      000008
  35              		.section	.rodata.SHIFT_TAB_CCxP,"a"
  36              		.align	2
  39              	SHIFT_TAB_CCxP:
  40 0000 00020406 		.ascii	"\000\002\004\006\010\012\014"
  40      080A0C
  41              		.section	.rodata.SHIFT_TAB_OISx,"a"
  42              		.align	2
  45              	SHIFT_TAB_OISx:
  46 0000 00010203 		.ascii	"\000\001\002\003\004\005\006"
  46      040506
  47              		.section	.text.LL_TIM_GetAutoReload,"ax",%progbits
  48              		.align	1
  49              		.syntax unified
  50              		.thumb
  51              		.thumb_func
  53              	LL_TIM_GetAutoReload:
  54              	.LFB88:
  55              		.file 1 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h"
   1:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
   2:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   ******************************************************************************
   3:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @file    stm32f1xx_ll_tim.h
   4:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @author  MCD Application Team
   5:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief   Header file of TIM LL module.
   6:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   ******************************************************************************
   7:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @attention
   8:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *
ARM GAS  /tmp/cc3R50AM.s 			page 2


   9:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * Copyright (c) 2016 STMicroelectronics.
  10:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * All rights reserved.
  11:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *
  12:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * in the root directory of this software component.
  14:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *
  16:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   ******************************************************************************
  17:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
  18:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
  19:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #ifndef __STM32F1xx_LL_TIM_H
  21:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define __STM32F1xx_LL_TIM_H
  22:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
  23:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #ifdef __cplusplus
  24:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** extern "C" {
  25:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #endif
  26:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
  27:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #include "stm32f1xx.h"
  29:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
  30:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @addtogroup STM32F1xx_LL_Driver
  31:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
  32:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
  33:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
  34:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #if defined (TIM1) || defined (TIM2) || defined (TIM3) || defined (TIM4) || defined (TIM5) || defin
  35:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
  36:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL TIM
  37:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
  38:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
  39:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
  40:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /* Private types -------------------------------------------------------------*/
  41:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /* Private variables ---------------------------------------------------------*/
  42:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_Private_Variables TIM Private Variables
  43:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
  44:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
  45:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** static const uint8_t OFFSET_TAB_CCMRx[] =
  46:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
  47:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   0x00U,   /* 0: TIMx_CH1  */
  48:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   0x00U,   /* 1: TIMx_CH1N */
  49:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   0x00U,   /* 2: TIMx_CH2  */
  50:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   0x00U,   /* 3: TIMx_CH2N */
  51:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   0x04U,   /* 4: TIMx_CH3  */
  52:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   0x04U,   /* 5: TIMx_CH3N */
  53:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   0x04U    /* 6: TIMx_CH4  */
  54:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** };
  55:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
  56:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** static const uint8_t SHIFT_TAB_OCxx[] =
  57:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
  58:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   0U,            /* 0: OC1M, OC1FE, OC1PE */
  59:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   0U,            /* 1: - NA */
  60:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   8U,            /* 2: OC2M, OC2FE, OC2PE */
  61:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   0U,            /* 3: - NA */
  62:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   0U,            /* 4: OC3M, OC3FE, OC3PE */
  63:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   0U,            /* 5: - NA */
  64:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   8U             /* 6: OC4M, OC4FE, OC4PE */
  65:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** };
ARM GAS  /tmp/cc3R50AM.s 			page 3


  66:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
  67:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** static const uint8_t SHIFT_TAB_ICxx[] =
  68:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
  69:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   0U,            /* 0: CC1S, IC1PSC, IC1F */
  70:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   0U,            /* 1: - NA */
  71:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   8U,            /* 2: CC2S, IC2PSC, IC2F */
  72:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   0U,            /* 3: - NA */
  73:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   0U,            /* 4: CC3S, IC3PSC, IC3F */
  74:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   0U,            /* 5: - NA */
  75:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   8U             /* 6: CC4S, IC4PSC, IC4F */
  76:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** };
  77:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
  78:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** static const uint8_t SHIFT_TAB_CCxP[] =
  79:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
  80:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   0U,            /* 0: CC1P */
  81:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   2U,            /* 1: CC1NP */
  82:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   4U,            /* 2: CC2P */
  83:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   6U,            /* 3: CC2NP */
  84:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   8U,            /* 4: CC3P */
  85:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   10U,           /* 5: CC3NP */
  86:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   12U            /* 6: CC4P */
  87:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** };
  88:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
  89:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** static const uint8_t SHIFT_TAB_OISx[] =
  90:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
  91:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   0U,            /* 0: OIS1 */
  92:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   1U,            /* 1: OIS1N */
  93:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   2U,            /* 2: OIS2 */
  94:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   3U,            /* 3: OIS2N */
  95:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   4U,            /* 4: OIS3 */
  96:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   5U,            /* 5: OIS3N */
  97:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   6U             /* 6: OIS4 */
  98:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** };
  99:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 100:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 101:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 102:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 103:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /* Private constants ---------------------------------------------------------*/
 104:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_Private_Constants TIM Private Constants
 105:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 106:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 107:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 108:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 109:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 110:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /* Mask used to set the TDG[x:0] of the DTG bits of the TIMx_BDTR register */
 111:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define DT_DELAY_1 ((uint8_t)0x7F)
 112:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define DT_DELAY_2 ((uint8_t)0x3F)
 113:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define DT_DELAY_3 ((uint8_t)0x1F)
 114:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define DT_DELAY_4 ((uint8_t)0x1F)
 115:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 116:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /* Mask used to set the DTG[7:5] bits of the DTG bits of the TIMx_BDTR register */
 117:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define DT_RANGE_1 ((uint8_t)0x00)
 118:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define DT_RANGE_2 ((uint8_t)0x80)
 119:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define DT_RANGE_3 ((uint8_t)0xC0)
 120:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define DT_RANGE_4 ((uint8_t)0xE0)
 121:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 122:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
ARM GAS  /tmp/cc3R50AM.s 			page 4


 123:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 124:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 125:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 126:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 127:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /* Private macros ------------------------------------------------------------*/
 128:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_Private_Macros TIM Private Macros
 129:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 130:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 131:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @brief  Convert channel id into channel index.
 132:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
 133:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
 134:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
 135:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
 136:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
 137:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
 138:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
 139:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
 140:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval none
 141:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 142:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define TIM_GET_CHANNEL_INDEX( __CHANNEL__) \
 143:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   (((__CHANNEL__) == LL_TIM_CHANNEL_CH1) ? 0U :\
 144:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****    ((__CHANNEL__) == LL_TIM_CHANNEL_CH1N) ? 1U :\
 145:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****    ((__CHANNEL__) == LL_TIM_CHANNEL_CH2) ? 2U :\
 146:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****    ((__CHANNEL__) == LL_TIM_CHANNEL_CH2N) ? 3U :\
 147:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****    ((__CHANNEL__) == LL_TIM_CHANNEL_CH3) ? 4U :\
 148:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****    ((__CHANNEL__) == LL_TIM_CHANNEL_CH3N) ? 5U : 6U)
 149:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 150:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @brief  Calculate the deadtime sampling period(in ps).
 151:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz).
 152:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __CKD__ This parameter can be one of the following values:
 153:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV1
 154:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV2
 155:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV4
 156:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval none
 157:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 158:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define TIM_CALC_DTS(__TIMCLK__, __CKD__)                                                        \
 159:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   (((__CKD__) == LL_TIM_CLOCKDIVISION_DIV1) ? ((uint64_t)1000000000000U/(__TIMCLK__))         : \
 160:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****    ((__CKD__) == LL_TIM_CLOCKDIVISION_DIV2) ? ((uint64_t)1000000000000U/((__TIMCLK__) >> 1U)) : \
 161:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****    ((uint64_t)1000000000000U/((__TIMCLK__) >> 2U)))
 162:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 163:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 164:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 165:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 166:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 167:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /* Exported types ------------------------------------------------------------*/
 168:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #if defined(USE_FULL_LL_DRIVER)
 169:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_ES_INIT TIM Exported Init structure
 170:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 171:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 172:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 173:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 174:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  TIM Time Base configuration structure definition.
 175:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 176:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** typedef struct
 177:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
 178:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint16_t Prescaler;         /*!< Specifies the prescaler value used to divide the TIM clock.
 179:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    This parameter can be a number between Min_Data=0x0000 and Max_D
ARM GAS  /tmp/cc3R50AM.s 			page 5


 180:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 181:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    This feature can be modified afterwards using unitary function
 182:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    @ref LL_TIM_SetPrescaler().*/
 183:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 184:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t CounterMode;       /*!< Specifies the counter mode.
 185:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    This parameter can be a value of @ref TIM_LL_EC_COUNTERMODE.
 186:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 187:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    This feature can be modified afterwards using unitary function
 188:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    @ref LL_TIM_SetCounterMode().*/
 189:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 190:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t Autoreload;        /*!< Specifies the auto reload value to be loaded into the active
 191:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    Auto-Reload Register at the next update event.
 192:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    This parameter must be a number between Min_Data=0x0000 and Max_
 193:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    Some timer instances may support 32 bits counters. In that case 
 194:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    be a number between 0x0000 and 0xFFFFFFFF.
 195:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 196:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    This feature can be modified afterwards using unitary function
 197:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    @ref LL_TIM_SetAutoReload().*/
 198:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 199:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t ClockDivision;     /*!< Specifies the clock division.
 200:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    This parameter can be a value of @ref TIM_LL_EC_CLOCKDIVISION.
 201:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 202:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    This feature can be modified afterwards using unitary function
 203:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    @ref LL_TIM_SetClockDivision().*/
 204:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 205:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t RepetitionCounter;  /*!< Specifies the repetition counter value. Each time the RCR downc
 206:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    reaches zero, an update event is generated and counting restarts
 207:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    from the RCR value (N).
 208:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    This means in PWM mode that (N+1) corresponds to:
 209:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       - the number of PWM periods in edge-aligned mode
 210:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       - the number of half PWM period in center-aligned mode
 211:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    GP timers: this parameter must be a number between Min_Data = 0x
 212:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    Max_Data = 0xFF.
 213:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    Advanced timers: this parameter must be a number between Min_Dat
 214:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    Max_Data = 0xFFFF.
 215:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 216:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    This feature can be modified afterwards using unitary function
 217:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    @ref LL_TIM_SetRepetitionCounter().*/
 218:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** } LL_TIM_InitTypeDef;
 219:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 220:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 221:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  TIM Output Compare configuration structure definition.
 222:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 223:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** typedef struct
 224:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
 225:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t OCMode;        /*!< Specifies the output mode.
 226:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCMODE.
 227:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 228:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function
 229:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                @ref LL_TIM_OC_SetMode().*/
 230:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 231:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t OCState;       /*!< Specifies the TIM Output Compare state.
 232:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCSTATE.
 233:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 234:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This feature can be modified afterwards using unitary functions
 235:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                @ref LL_TIM_CC_EnableChannel() or @ref LL_TIM_CC_DisableChannel().*/
 236:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
ARM GAS  /tmp/cc3R50AM.s 			page 6


 237:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t OCNState;      /*!< Specifies the TIM complementary Output Compare state.
 238:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCSTATE.
 239:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 240:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This feature can be modified afterwards using unitary functions
 241:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                @ref LL_TIM_CC_EnableChannel() or @ref LL_TIM_CC_DisableChannel().*/
 242:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 243:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t CompareValue;  /*!< Specifies the Compare value to be loaded into the Capture Compare Re
 244:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This parameter can be a number between Min_Data=0x0000 and Max_Data=
 245:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 246:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function
 247:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                LL_TIM_OC_SetCompareCHx (x=1..6).*/
 248:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 249:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t OCPolarity;    /*!< Specifies the output polarity.
 250:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCPOLARITY.
 251:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 252:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function
 253:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                @ref LL_TIM_OC_SetPolarity().*/
 254:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 255:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t OCNPolarity;   /*!< Specifies the complementary output polarity.
 256:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCPOLARITY.
 257:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 258:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function
 259:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                @ref LL_TIM_OC_SetPolarity().*/
 260:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 261:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 262:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t OCIdleState;   /*!< Specifies the TIM Output Compare pin state during Idle state.
 263:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCIDLESTATE.
 264:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 265:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function
 266:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                @ref LL_TIM_OC_SetIdleState().*/
 267:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 268:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t OCNIdleState;  /*!< Specifies the TIM Output Compare pin state during Idle state.
 269:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCIDLESTATE.
 270:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 271:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function
 272:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                @ref LL_TIM_OC_SetIdleState().*/
 273:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** } LL_TIM_OC_InitTypeDef;
 274:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 275:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 276:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  TIM Input Capture configuration structure definition.
 277:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 278:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 279:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** typedef struct
 280:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
 281:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 282:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t ICPolarity;    /*!< Specifies the active edge of the input signal.
 283:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_IC_POLARITY.
 284:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 285:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function
 286:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                @ref LL_TIM_IC_SetPolarity().*/
 287:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 288:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t ICActiveInput; /*!< Specifies the input.
 289:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_ACTIVEINPUT.
 290:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 291:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function
 292:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                @ref LL_TIM_IC_SetActiveInput().*/
 293:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
ARM GAS  /tmp/cc3R50AM.s 			page 7


 294:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t ICPrescaler;   /*!< Specifies the Input Capture Prescaler.
 295:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_ICPSC.
 296:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 297:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function
 298:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                @ref LL_TIM_IC_SetPrescaler().*/
 299:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 300:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t ICFilter;      /*!< Specifies the input capture filter.
 301:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_IC_FILTER.
 302:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 303:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function
 304:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                @ref LL_TIM_IC_SetFilter().*/
 305:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** } LL_TIM_IC_InitTypeDef;
 306:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 307:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 308:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 309:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  TIM Encoder interface configuration structure definition.
 310:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 311:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** typedef struct
 312:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
 313:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t EncoderMode;     /*!< Specifies the encoder resolution (x2 or x4).
 314:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ENCODERMODE.
 315:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 316:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function
 317:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  @ref LL_TIM_SetEncoderMode().*/
 318:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 319:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t IC1Polarity;     /*!< Specifies the active edge of TI1 input.
 320:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_IC_POLARITY.
 321:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 322:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function
 323:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  @ref LL_TIM_IC_SetPolarity().*/
 324:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 325:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t IC1ActiveInput;  /*!< Specifies the TI1 input source
 326:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ACTIVEINPUT.
 327:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 328:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function
 329:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  @ref LL_TIM_IC_SetActiveInput().*/
 330:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 331:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t IC1Prescaler;    /*!< Specifies the TI1 input prescaler value.
 332:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ICPSC.
 333:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 334:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function
 335:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  @ref LL_TIM_IC_SetPrescaler().*/
 336:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 337:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t IC1Filter;       /*!< Specifies the TI1 input filter.
 338:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_IC_FILTER.
 339:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 340:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function
 341:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  @ref LL_TIM_IC_SetFilter().*/
 342:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 343:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t IC2Polarity;      /*!< Specifies the active edge of TI2 input.
 344:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_IC_POLARITY.
 345:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 346:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function
 347:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  @ref LL_TIM_IC_SetPolarity().*/
 348:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 349:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t IC2ActiveInput;  /*!< Specifies the TI2 input source
 350:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ACTIVEINPUT.
ARM GAS  /tmp/cc3R50AM.s 			page 8


 351:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 352:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function
 353:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  @ref LL_TIM_IC_SetActiveInput().*/
 354:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 355:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t IC2Prescaler;    /*!< Specifies the TI2 input prescaler value.
 356:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ICPSC.
 357:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 358:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function
 359:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  @ref LL_TIM_IC_SetPrescaler().*/
 360:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 361:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t IC2Filter;       /*!< Specifies the TI2 input filter.
 362:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_IC_FILTER.
 363:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 364:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function
 365:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  @ref LL_TIM_IC_SetFilter().*/
 366:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 367:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** } LL_TIM_ENCODER_InitTypeDef;
 368:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 369:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 370:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  TIM Hall sensor interface configuration structure definition.
 371:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 372:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** typedef struct
 373:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
 374:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 375:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t IC1Polarity;        /*!< Specifies the active edge of TI1 input.
 376:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                     This parameter can be a value of @ref TIM_LL_EC_IC_POLARITY.
 377:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 378:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                     This feature can be modified afterwards using unitary function
 379:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                     @ref LL_TIM_IC_SetPolarity().*/
 380:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 381:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t IC1Prescaler;       /*!< Specifies the TI1 input prescaler value.
 382:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                     Prescaler must be set to get a maximum counter period longer th
 383:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                     time interval between 2 consecutive changes on the Hall inputs.
 384:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                     This parameter can be a value of @ref TIM_LL_EC_ICPSC.
 385:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 386:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                     This feature can be modified afterwards using unitary function
 387:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                     @ref LL_TIM_IC_SetPrescaler().*/
 388:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 389:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t IC1Filter;          /*!< Specifies the TI1 input filter.
 390:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                     This parameter can be a value of
 391:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                     @ref TIM_LL_EC_IC_FILTER.
 392:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 393:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                     This feature can be modified afterwards using unitary function
 394:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                     @ref LL_TIM_IC_SetFilter().*/
 395:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 396:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t CommutationDelay;   /*!< Specifies the compare value to be loaded into the Capture Compa
 397:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                     A positive pulse (TRGO event) is generated with a programmable 
 398:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                     a change occurs on the Hall inputs.
 399:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                     This parameter can be a number between Min_Data = 0x0000 and Ma
 400:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 401:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                     This feature can be modified afterwards using unitary function
 402:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                     @ref LL_TIM_OC_SetCompareCH2().*/
 403:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** } LL_TIM_HALLSENSOR_InitTypeDef;
 404:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 405:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 406:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  BDTR (Break and Dead Time) structure definition
 407:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
ARM GAS  /tmp/cc3R50AM.s 			page 9


 408:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** typedef struct
 409:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
 410:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t OSSRState;            /*!< Specifies the Off-State selection used in Run mode.
 411:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_OSSR
 412:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 413:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 414:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       @ref LL_TIM_SetOffStates()
 415:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 416:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       @note This bit-field cannot be modified as long as LOCK level
 417:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                        programmed. */
 418:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 419:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t OSSIState;            /*!< Specifies the Off-State used in Idle state.
 420:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_OSSI
 421:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 422:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 423:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       @ref LL_TIM_SetOffStates()
 424:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 425:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       @note This bit-field cannot be modified as long as LOCK level
 426:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       programmed. */
 427:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 428:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t LockLevel;            /*!< Specifies the LOCK level parameters.
 429:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_LOCKLEVEL
 430:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 431:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       @note The LOCK bits can be written only once after the reset.
 432:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       register has been written, their content is frozen until the 
 433:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 434:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint8_t DeadTime;              /*!< Specifies the delay time between the switching-off and the
 435:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       switching-on of the outputs.
 436:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       This parameter can be a number between Min_Data = 0x00 and Ma
 437:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 438:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 439:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       @ref LL_TIM_OC_SetDeadTime()
 440:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 441:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 442:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                        programmed. */
 443:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 444:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint16_t BreakState;           /*!< Specifies whether the TIM Break input is enabled or not.
 445:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_BREAK_ENABLE
 446:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 447:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 448:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       @ref LL_TIM_EnableBRK() or @ref LL_TIM_DisableBRK()
 449:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 450:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 451:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       programmed. */
 452:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 453:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t BreakPolarity;        /*!< Specifies the TIM Break Input pin polarity.
 454:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_BREAK_POLARIT
 455:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 456:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 457:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       @ref LL_TIM_ConfigBRK()
 458:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 459:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 460:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       programmed. */
 461:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 462:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t AutomaticOutput;      /*!< Specifies whether the TIM Automatic Output feature is enabled
 463:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_AUTOMATICOUTP
 464:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
ARM GAS  /tmp/cc3R50AM.s 			page 10


 465:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 466:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       @ref LL_TIM_EnableAutomaticOutput() or @ref LL_TIM_DisableAut
 467:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 468:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 469:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       programmed. */
 470:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** } LL_TIM_BDTR_InitTypeDef;
 471:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 472:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 473:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 474:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 475:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #endif /* USE_FULL_LL_DRIVER */
 476:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 477:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /* Exported constants --------------------------------------------------------*/
 478:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_Exported_Constants TIM Exported Constants
 479:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 480:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 481:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 482:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_GET_FLAG Get Flags Defines
 483:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief    Flags defines which can be used with LL_TIM_ReadReg function.
 484:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 485:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 486:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_SR_UIF                          TIM_SR_UIF           /*!< Update interrupt flag */
 487:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_SR_CC1IF                        TIM_SR_CC1IF         /*!< Capture/compare 1 interrup
 488:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_SR_CC2IF                        TIM_SR_CC2IF         /*!< Capture/compare 2 interrup
 489:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_SR_CC3IF                        TIM_SR_CC3IF         /*!< Capture/compare 3 interrup
 490:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_SR_CC4IF                        TIM_SR_CC4IF         /*!< Capture/compare 4 interrup
 491:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_SR_COMIF                        TIM_SR_COMIF         /*!< COM interrupt flag */
 492:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_SR_TIF                          TIM_SR_TIF           /*!< Trigger interrupt flag */
 493:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_SR_BIF                          TIM_SR_BIF           /*!< Break interrupt flag */
 494:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_SR_CC1OF                        TIM_SR_CC1OF         /*!< Capture/Compare 1 overcapt
 495:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_SR_CC2OF                        TIM_SR_CC2OF         /*!< Capture/Compare 2 overcapt
 496:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_SR_CC3OF                        TIM_SR_CC3OF         /*!< Capture/Compare 3 overcapt
 497:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_SR_CC4OF                        TIM_SR_CC4OF         /*!< Capture/Compare 4 overcapt
 498:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 499:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 500:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 501:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 502:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #if defined(USE_FULL_LL_DRIVER)
 503:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BREAK_ENABLE Break Enable
 504:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 505:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 506:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_BREAK_DISABLE            0x00000000U             /*!< Break function disabled */
 507:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_BREAK_ENABLE             TIM_BDTR_BKE            /*!< Break function enabled */
 508:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 509:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 510:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 511:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 512:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_AUTOMATICOUTPUT_ENABLE Automatic output enable
 513:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 514:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 515:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_AUTOMATICOUTPUT_DISABLE         0x00000000U             /*!< MOE can be set only by 
 516:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_AUTOMATICOUTPUT_ENABLE          TIM_BDTR_AOE            /*!< MOE can be set by softw
 517:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 518:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 519:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 520:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #endif /* USE_FULL_LL_DRIVER */
 521:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
ARM GAS  /tmp/cc3R50AM.s 			page 11


 522:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_IT IT Defines
 523:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief    IT defines which can be used with LL_TIM_ReadReg and  LL_TIM_WriteReg functions.
 524:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 525:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 526:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DIER_UIE                        TIM_DIER_UIE         /*!< Update interrupt enable */
 527:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DIER_CC1IE                      TIM_DIER_CC1IE       /*!< Capture/compare 1 interrup
 528:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DIER_CC2IE                      TIM_DIER_CC2IE       /*!< Capture/compare 2 interrup
 529:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DIER_CC3IE                      TIM_DIER_CC3IE       /*!< Capture/compare 3 interrup
 530:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DIER_CC4IE                      TIM_DIER_CC4IE       /*!< Capture/compare 4 interrup
 531:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DIER_COMIE                      TIM_DIER_COMIE       /*!< COM interrupt enable */
 532:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DIER_TIE                        TIM_DIER_TIE         /*!< Trigger interrupt enable *
 533:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DIER_BIE                        TIM_DIER_BIE         /*!< Break interrupt enable */
 534:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 535:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 536:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 537:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 538:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_UPDATESOURCE Update Source
 539:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 540:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 541:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_UPDATESOURCE_REGULAR            0x00000000U          /*!< Counter overflow/underflow
 542:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_UPDATESOURCE_COUNTER            TIM_CR1_URS          /*!< Only counter overflow/unde
 543:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 544:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 545:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 546:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 547:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ONEPULSEMODE One Pulse Mode
 548:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 549:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 550:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ONEPULSEMODE_SINGLE             TIM_CR1_OPM          /*!< Counter stops counting at 
 551:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ONEPULSEMODE_REPETITIVE         0x00000000U          /*!< Counter is not stopped at 
 552:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 553:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 554:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 555:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 556:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_COUNTERMODE Counter Mode
 557:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 558:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 559:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_UP                  0x00000000U          /*!<Counter used as upcounter *
 560:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_DOWN                TIM_CR1_DIR          /*!< Counter used as downcounte
 561:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_CENTER_DOWN         TIM_CR1_CMS_0        /*!< The counter counts up and 
 562:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_CENTER_UP           TIM_CR1_CMS_1        /*!<The counter counts up and d
 563:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_CENTER_UP_DOWN      TIM_CR1_CMS          /*!< The counter counts up and 
 564:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 565:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 566:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 567:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 568:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_CLOCKDIVISION Clock Division
 569:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 570:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 571:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_CLOCKDIVISION_DIV1              0x00000000U          /*!< tDTS=tCK_INT */
 572:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_CLOCKDIVISION_DIV2              TIM_CR1_CKD_0        /*!< tDTS=2*tCK_INT */
 573:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_CLOCKDIVISION_DIV4              TIM_CR1_CKD_1        /*!< tDTS=4*tCK_INT */
 574:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 575:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 576:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 577:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 578:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_COUNTERDIRECTION Counter Direction
ARM GAS  /tmp/cc3R50AM.s 			page 12


 579:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 580:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 581:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_COUNTERDIRECTION_UP             0x00000000U          /*!< Timer counter counts up */
 582:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_COUNTERDIRECTION_DOWN           TIM_CR1_DIR          /*!< Timer counter counts down 
 583:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 584:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 585:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 586:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 587:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_CCUPDATESOURCE Capture Compare  Update Source
 588:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 589:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 590:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_CCUPDATESOURCE_COMG_ONLY        0x00000000U          /*!< Capture/compare control bi
 591:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_CCUPDATESOURCE_COMG_AND_TRGI    TIM_CR2_CCUS         /*!< Capture/compare control bi
 592:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 593:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 594:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 595:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 596:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_CCDMAREQUEST Capture Compare DMA Request
 597:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 598:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 599:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_CCDMAREQUEST_CC                 0x00000000U          /*!< CCx DMA request sent when 
 600:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_CCDMAREQUEST_UPDATE             TIM_CR2_CCDS         /*!< CCx DMA requests sent when
 601:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 602:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 603:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 604:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 605:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_LOCKLEVEL Lock Level
 606:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 607:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 608:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_LOCKLEVEL_OFF                   0x00000000U          /*!< LOCK OFF - No bit is write
 609:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_LOCKLEVEL_1                     TIM_BDTR_LOCK_0      /*!< LOCK Level 1 */
 610:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_LOCKLEVEL_2                     TIM_BDTR_LOCK_1      /*!< LOCK Level 2 */
 611:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_LOCKLEVEL_3                     TIM_BDTR_LOCK        /*!< LOCK Level 3 */
 612:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 613:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 614:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 615:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 616:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_CHANNEL Channel
 617:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 618:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 619:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH1                     TIM_CCER_CC1E     /*!< Timer input/output channel 1 
 620:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH1N                    TIM_CCER_CC1NE    /*!< Timer complementary output ch
 621:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH2                     TIM_CCER_CC2E     /*!< Timer input/output channel 2 
 622:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH2N                    TIM_CCER_CC2NE    /*!< Timer complementary output ch
 623:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH3                     TIM_CCER_CC3E     /*!< Timer input/output channel 3 
 624:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH3N                    TIM_CCER_CC3NE    /*!< Timer complementary output ch
 625:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH4                     TIM_CCER_CC4E     /*!< Timer input/output channel 4 
 626:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 627:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 628:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 629:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 630:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #if defined(USE_FULL_LL_DRIVER)
 631:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OCSTATE Output Configuration State
 632:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 633:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 634:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_OCSTATE_DISABLE                 0x00000000U             /*!< OCx is not active */
 635:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_OCSTATE_ENABLE                  TIM_CCER_CC1E           /*!< OCx signal is output on
ARM GAS  /tmp/cc3R50AM.s 			page 13


 636:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 637:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 638:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 639:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #endif /* USE_FULL_LL_DRIVER */
 640:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 641:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OCMODE Output Configuration Mode
 642:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 643:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 644:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_OCMODE_FROZEN                   0x00000000U                                         
 645:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_OCMODE_ACTIVE                   TIM_CCMR1_OC1M_0                                    
 646:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_OCMODE_INACTIVE                 TIM_CCMR1_OC1M_1                                    
 647:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_OCMODE_TOGGLE                   (TIM_CCMR1_OC1M_1 | TIM_CCMR1_OC1M_0)               
 648:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_OCMODE_FORCED_INACTIVE          TIM_CCMR1_OC1M_2                                    
 649:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_OCMODE_FORCED_ACTIVE            (TIM_CCMR1_OC1M_2 | TIM_CCMR1_OC1M_0)               
 650:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_OCMODE_PWM1                     (TIM_CCMR1_OC1M_2 | TIM_CCMR1_OC1M_1)               
 651:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_OCMODE_PWM2                     (TIM_CCMR1_OC1M_2 | TIM_CCMR1_OC1M_1 | TIM_CCMR1_OC1
 652:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 653:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 654:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 655:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 656:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OCPOLARITY Output Configuration Polarity
 657:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 658:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 659:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_OCPOLARITY_HIGH                 0x00000000U                 /*!< OCxactive high*/
 660:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_OCPOLARITY_LOW                  TIM_CCER_CC1P               /*!< OCxactive low*/
 661:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 662:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 663:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 664:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 665:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OCIDLESTATE Output Configuration Idle State
 666:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 667:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 668:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_OCIDLESTATE_LOW                 0x00000000U             /*!<OCx=0 (after a dead-time
 669:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_OCIDLESTATE_HIGH                TIM_CR2_OIS1            /*!<OCx=1 (after a dead-time
 670:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 671:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 672:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 673:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 674:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 675:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ACTIVEINPUT Active Input Selection
 676:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 677:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 678:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ACTIVEINPUT_DIRECTTI            (TIM_CCMR1_CC1S_0 << 16U) /*!< ICx is mapped on TIx 
 679:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ACTIVEINPUT_INDIRECTTI          (TIM_CCMR1_CC1S_1 << 16U) /*!< ICx is mapped on TIy 
 680:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ACTIVEINPUT_TRC                 (TIM_CCMR1_CC1S << 16U)   /*!< ICx is mapped on TRC 
 681:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 682:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 683:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 684:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 685:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ICPSC Input Configuration Prescaler
 686:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 687:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 688:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ICPSC_DIV1                      0x00000000U                    /*!< No prescaler, ca
 689:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ICPSC_DIV2                      (TIM_CCMR1_IC1PSC_0 << 16U)    /*!< Capture is done 
 690:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ICPSC_DIV4                      (TIM_CCMR1_IC1PSC_1 << 16U)    /*!< Capture is done 
 691:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ICPSC_DIV8                      (TIM_CCMR1_IC1PSC << 16U)      /*!< Capture is done 
 692:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
ARM GAS  /tmp/cc3R50AM.s 			page 14


 693:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 694:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 695:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 696:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_IC_FILTER Input Configuration Filter
 697:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 698:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 699:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV1                 0x00000000U                                         
 700:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV1_N2              (TIM_CCMR1_IC1F_0 << 16U)                           
 701:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV1_N4              (TIM_CCMR1_IC1F_1 << 16U)                           
 702:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV1_N8              ((TIM_CCMR1_IC1F_1 | TIM_CCMR1_IC1F_0) << 16U)      
 703:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV2_N6              (TIM_CCMR1_IC1F_2 << 16U)                           
 704:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV2_N8              ((TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC1F_0) << 16U)      
 705:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV4_N6              ((TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC1F_1) << 16U)      
 706:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV4_N8              ((TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC1F_1 | TIM_CCMR1_IC
 707:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV8_N6              (TIM_CCMR1_IC1F_3 << 16U)                           
 708:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV8_N8              ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_0) << 16U)      
 709:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV16_N5             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_1) << 16U)      
 710:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV16_N6             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_1 | TIM_CCMR1_IC
 711:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV16_N8             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_2) << 16U)      
 712:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV32_N5             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC
 713:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV32_N6             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC
 714:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV32_N8             (TIM_CCMR1_IC1F << 16U)                             
 715:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 716:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 717:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 718:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 719:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_IC_POLARITY Input Configuration Polarity
 720:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 721:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 722:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_IC_POLARITY_RISING              0x00000000U                      /*!< The circuit is
 723:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_IC_POLARITY_FALLING             TIM_CCER_CC1P                    /*!< The circuit is
 724:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 725:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 726:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 727:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 728:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_CLOCKSOURCE Clock Source
 729:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 730:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 731:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_CLOCKSOURCE_INTERNAL            0x00000000U                                         
 732:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_CLOCKSOURCE_EXT_MODE1           (TIM_SMCR_SMS_2 | TIM_SMCR_SMS_1 | TIM_SMCR_SMS_0)  
 733:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_CLOCKSOURCE_EXT_MODE2           TIM_SMCR_ECE                                        
 734:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 735:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 736:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 737:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 738:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ENCODERMODE Encoder Mode
 739:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 740:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 741:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ENCODERMODE_X2_TI1                     TIM_SMCR_SMS_0                               
 742:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ENCODERMODE_X2_TI2                     TIM_SMCR_SMS_1                               
 743:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ENCODERMODE_X4_TI12                   (TIM_SMCR_SMS_1 | TIM_SMCR_SMS_0)             
 744:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 745:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 746:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 747:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 748:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TRGO Trigger Output
 749:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
ARM GAS  /tmp/cc3R50AM.s 			page 15


 750:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 751:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_TRGO_RESET                      0x00000000U                                     /*!<
 752:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_TRGO_ENABLE                     TIM_CR2_MMS_0                                   /*!<
 753:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_TRGO_UPDATE                     TIM_CR2_MMS_1                                   /*!<
 754:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_TRGO_CC1IF                      (TIM_CR2_MMS_1 | TIM_CR2_MMS_0)                 /*!<
 755:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_TRGO_OC1REF                     TIM_CR2_MMS_2                                   /*!<
 756:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_TRGO_OC2REF                     (TIM_CR2_MMS_2 | TIM_CR2_MMS_0)                 /*!<
 757:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_TRGO_OC3REF                     (TIM_CR2_MMS_2 | TIM_CR2_MMS_1)                 /*!<
 758:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_TRGO_OC4REF                     (TIM_CR2_MMS_2 | TIM_CR2_MMS_1 | TIM_CR2_MMS_0) /*!<
 759:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 760:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 761:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 762:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 763:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 764:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_SLAVEMODE Slave Mode
 765:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 766:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 767:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_SLAVEMODE_DISABLED              0x00000000U                         /*!< Slave mode 
 768:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_SLAVEMODE_RESET                 TIM_SMCR_SMS_2                      /*!< Reset Mode 
 769:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_SLAVEMODE_GATED                 (TIM_SMCR_SMS_2 | TIM_SMCR_SMS_0)   /*!< Gated Mode 
 770:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_SLAVEMODE_TRIGGER               (TIM_SMCR_SMS_2 | TIM_SMCR_SMS_1)   /*!< Trigger Mod
 771:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 772:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 773:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 774:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 775:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TS Trigger Selection
 776:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 777:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 778:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_TS_ITR0                         0x00000000U                                         
 779:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_TS_ITR1                         TIM_SMCR_TS_0                                       
 780:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_TS_ITR2                         TIM_SMCR_TS_1                                       
 781:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_TS_ITR3                         (TIM_SMCR_TS_0 | TIM_SMCR_TS_1)                     
 782:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_TS_TI1F_ED                      TIM_SMCR_TS_2                                       
 783:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_TS_TI1FP1                       (TIM_SMCR_TS_2 | TIM_SMCR_TS_0)                     
 784:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_TS_TI2FP2                       (TIM_SMCR_TS_2 | TIM_SMCR_TS_1)                     
 785:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_TS_ETRF                         (TIM_SMCR_TS_2 | TIM_SMCR_TS_1 | TIM_SMCR_TS_0)     
 786:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 787:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 788:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 789:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 790:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ETR_POLARITY External Trigger Polarity
 791:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 792:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 793:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_POLARITY_NONINVERTED        0x00000000U             /*!< ETR is non-inverted, ac
 794:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_POLARITY_INVERTED           TIM_SMCR_ETP            /*!< ETR is inverted, active
 795:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 796:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 797:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 798:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 799:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ETR_PRESCALER External Trigger Prescaler
 800:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 801:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 802:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_PRESCALER_DIV1              0x00000000U             /*!< ETR prescaler OFF */
 803:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_PRESCALER_DIV2              TIM_SMCR_ETPS_0         /*!< ETR frequency is divide
 804:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_PRESCALER_DIV4              TIM_SMCR_ETPS_1         /*!< ETR frequency is divide
 805:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_PRESCALER_DIV8              TIM_SMCR_ETPS           /*!< ETR frequency is divide
 806:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
ARM GAS  /tmp/cc3R50AM.s 			page 16


 807:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 808:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 809:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 810:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ETR_FILTER External Trigger Filter
 811:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 812:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 813:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV1                0x00000000U                                         
 814:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV1_N2             TIM_SMCR_ETF_0                                      
 815:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV1_N4             TIM_SMCR_ETF_1                                      
 816:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV1_N8             (TIM_SMCR_ETF_1 | TIM_SMCR_ETF_0)                   
 817:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV2_N6             TIM_SMCR_ETF_2                                      
 818:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV2_N8             (TIM_SMCR_ETF_2 | TIM_SMCR_ETF_0)                   
 819:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV4_N6             (TIM_SMCR_ETF_2 | TIM_SMCR_ETF_1)                   
 820:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV4_N8             (TIM_SMCR_ETF_2 | TIM_SMCR_ETF_1 | TIM_SMCR_ETF_0)  
 821:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV8_N6             TIM_SMCR_ETF_3                                      
 822:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV8_N8             (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_0)                   
 823:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV16_N5            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_1)                   
 824:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV16_N6            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_1 | TIM_SMCR_ETF_0)  
 825:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV16_N8            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_2)                   
 826:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV32_N5            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_2 | TIM_SMCR_ETF_0)  
 827:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV32_N6            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_2 | TIM_SMCR_ETF_1)  
 828:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV32_N8            TIM_SMCR_ETF                                        
 829:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 830:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 831:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 832:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 833:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 834:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BREAK_POLARITY break polarity
 835:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 836:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 837:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_BREAK_POLARITY_LOW              0x00000000U               /*!< Break input BRK is ac
 838:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_BREAK_POLARITY_HIGH             TIM_BDTR_BKP              /*!< Break input BRK is ac
 839:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 840:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 841:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 842:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 843:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 844:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 845:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 846:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OSSI OSSI
 847:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 848:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 849:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_OSSI_DISABLE                    0x00000000U             /*!< When inactive, OCx/OCxN
 850:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_OSSI_ENABLE                     TIM_BDTR_OSSI           /*!< When inactive, OxC/OCxN
 851:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 852:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 853:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 854:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 855:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OSSR OSSR
 856:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 857:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 858:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_OSSR_DISABLE                    0x00000000U             /*!< When inactive, OCx/OCxN
 859:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_OSSR_ENABLE                     TIM_BDTR_OSSR           /*!< When inactive, OC/OCN o
 860:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 861:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 862:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 863:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
ARM GAS  /tmp/cc3R50AM.s 			page 17


 864:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 865:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_DMABURST_BASEADDR DMA Burst Base Address
 866:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 867:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 868:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CR1           0x00000000U                                         
 869:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CR2           TIM_DCR_DBA_0                                       
 870:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_SMCR          TIM_DCR_DBA_1                                       
 871:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_DIER          (TIM_DCR_DBA_1 |  TIM_DCR_DBA_0)                    
 872:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_SR            TIM_DCR_DBA_2                                       
 873:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_EGR           (TIM_DCR_DBA_2 | TIM_DCR_DBA_0)                     
 874:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCMR1         (TIM_DCR_DBA_2 | TIM_DCR_DBA_1)                     
 875:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCMR2         (TIM_DCR_DBA_2 | TIM_DCR_DBA_1 | TIM_DCR_DBA_0)     
 876:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCER          TIM_DCR_DBA_3                                       
 877:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CNT           (TIM_DCR_DBA_3 | TIM_DCR_DBA_0)                     
 878:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_PSC           (TIM_DCR_DBA_3 | TIM_DCR_DBA_1)                     
 879:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_ARR           (TIM_DCR_DBA_3 | TIM_DCR_DBA_1 | TIM_DCR_DBA_0)     
 880:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_RCR           (TIM_DCR_DBA_3 | TIM_DCR_DBA_2)                     
 881:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR1          (TIM_DCR_DBA_3 | TIM_DCR_DBA_2 | TIM_DCR_DBA_0)     
 882:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR2          (TIM_DCR_DBA_3 | TIM_DCR_DBA_2 | TIM_DCR_DBA_1)     
 883:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR3          (TIM_DCR_DBA_3 | TIM_DCR_DBA_2 | TIM_DCR_DBA_1 | TIM
 884:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR4          TIM_DCR_DBA_4                                       
 885:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_BDTR          (TIM_DCR_DBA_4 | TIM_DCR_DBA_0)                     
 886:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 887:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 888:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 889:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 890:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_DMABURST_LENGTH DMA Burst Length
 891:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 892:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 893:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_1TRANSFER       0x00000000U                                         
 894:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_2TRANSFERS      TIM_DCR_DBL_0                                       
 895:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_3TRANSFERS      TIM_DCR_DBL_1                                       
 896:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_4TRANSFERS      (TIM_DCR_DBL_1 |  TIM_DCR_DBL_0)                    
 897:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_5TRANSFERS      TIM_DCR_DBL_2                                       
 898:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_6TRANSFERS      (TIM_DCR_DBL_2 | TIM_DCR_DBL_0)                     
 899:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_7TRANSFERS      (TIM_DCR_DBL_2 | TIM_DCR_DBL_1)                     
 900:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_8TRANSFERS      (TIM_DCR_DBL_2 | TIM_DCR_DBL_1 | TIM_DCR_DBL_0)     
 901:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_9TRANSFERS      TIM_DCR_DBL_3                                       
 902:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_10TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_0)                     
 903:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_11TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_1)                     
 904:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_12TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_1 | TIM_DCR_DBL_0)     
 905:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_13TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_2)                     
 906:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_14TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_2 | TIM_DCR_DBL_0)     
 907:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_15TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_2 | TIM_DCR_DBL_1)     
 908:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_16TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_2 | TIM_DCR_DBL_1 | TIM
 909:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_17TRANSFERS     TIM_DCR_DBL_4                                       
 910:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_18TRANSFERS     (TIM_DCR_DBL_4 |  TIM_DCR_DBL_0)                    
 911:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 912:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 913:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 914:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 915:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 916:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 917:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 918:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 919:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 920:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
ARM GAS  /tmp/cc3R50AM.s 			page 18


 921:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /* Exported macro ------------------------------------------------------------*/
 922:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_Exported_Macros TIM Exported Macros
 923:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 924:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 925:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 926:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EM_WRITE_READ Common Write and read registers Macros
 927:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 928:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 929:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 930:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Write a value in TIM register.
 931:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __INSTANCE__ TIM Instance
 932:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __REG__ Register to be written
 933:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __VALUE__ Value to be written in the register
 934:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
 935:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 936:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG((__INSTANCE__)->__REG__, (__VAL
 937:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 938:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 939:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Read a value in TIM register.
 940:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __INSTANCE__ TIM Instance
 941:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __REG__ Register to be read
 942:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval Register value
 943:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 944:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ReadReg(__INSTANCE__, __REG__) READ_REG((__INSTANCE__)->__REG__)
 945:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 946:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 947:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 948:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 949:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 950:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  HELPER macro calculating DTG[0:7] in the TIMx_BDTR register to achieve the requested de
 951:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_DEADTIME (80000000, @ref LL_TIM_GetClockDivision (), 120);
 952:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
 953:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __CKD__ This parameter can be one of the following values:
 954:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV1
 955:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV2
 956:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV4
 957:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __DT__ deadtime duration (in ns)
 958:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval DTG[0:7]
 959:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 960:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define __LL_TIM_CALC_DEADTIME(__TIMCLK__, __CKD__, __DT__)  \
 961:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   ( (((uint64_t)((__DT__)*1000U)) < ((DT_DELAY_1+1U) * TIM_CALC_DTS((__TIMCLK__), (__CKD__))))    ?
 962:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****     (uint8_t)(((uint64_t)((__DT__)*1000U) / TIM_CALC_DTS((__TIMCLK__), (__CKD__)))  & DT_DELAY_1) :
 963:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****     (((uint64_t)((__DT__)*1000U)) < ((64U + (DT_DELAY_2+1U)) * 2U * TIM_CALC_DTS((__TIMCLK__), (__C
 964:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****     (uint8_t)(DT_RANGE_2 | ((uint8_t)((uint8_t)((((uint64_t)((__DT__)*1000U))/ TIM_CALC_DTS((__TIMC
 965:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                                  (__CKD__))) >> 1U) - (uint8_t) 64) & DT_DELAY_2)) 
 966:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****     (((uint64_t)((__DT__)*1000U)) < ((32U + (DT_DELAY_3+1U)) * 8U * TIM_CALC_DTS((__TIMCLK__), (__C
 967:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****     (uint8_t)(DT_RANGE_3 | ((uint8_t)((uint8_t)(((((uint64_t)(__DT__)*1000U))/ TIM_CALC_DTS((__TIMC
 968:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                                  (__CKD__))) >> 3U) - (uint8_t) 32) & DT_DELAY_3)) 
 969:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****     (((uint64_t)((__DT__)*1000U)) < ((32U + (DT_DELAY_4+1U)) * 16U * TIM_CALC_DTS((__TIMCLK__), (__
 970:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****     (uint8_t)(DT_RANGE_4 | ((uint8_t)((uint8_t)(((((uint64_t)(__DT__)*1000U))/ TIM_CALC_DTS((__TIMC
 971:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                                  (__CKD__))) >> 4U) - (uint8_t) 32) & DT_DELAY_4)) 
 972:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****     0U)
 973:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 974:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 975:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  HELPER macro calculating the prescaler value to achieve the required counter clock freq
 976:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_PSC (80000000, 1000000);
 977:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
ARM GAS  /tmp/cc3R50AM.s 			page 19


 978:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __CNTCLK__ counter clock frequency (in Hz)
 979:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval Prescaler value  (between Min_Data=0 and Max_Data=65535)
 980:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 981:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define __LL_TIM_CALC_PSC(__TIMCLK__, __CNTCLK__)   \
 982:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   (((__TIMCLK__) >= (__CNTCLK__)) ? (uint32_t)((((__TIMCLK__) + (__CNTCLK__)/2U)/(__CNTCLK__)) - 1U
 983:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 984:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 985:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  HELPER macro calculating the auto-reload value to achieve the required output signal fr
 986:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_ARR (1000000, @ref LL_TIM_GetPrescaler (), 10000);
 987:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
 988:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __PSC__ prescaler
 989:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __FREQ__ output signal frequency (in Hz)
 990:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval  Auto-reload value  (between Min_Data=0 and Max_Data=65535)
 991:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 992:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define __LL_TIM_CALC_ARR(__TIMCLK__, __PSC__, __FREQ__) \
 993:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   ((((__TIMCLK__)/((__PSC__) + 1U)) >= (__FREQ__)) ? (((__TIMCLK__)/((__FREQ__) * ((__PSC__) + 1U))
 994:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 995:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 996:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  HELPER macro calculating the compare value required to achieve the required timer outpu
 997:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         active/inactive delay.
 998:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_DELAY (1000000, @ref LL_TIM_GetPrescaler (), 10);
 999:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
1000:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __PSC__ prescaler
1001:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __DELAY__ timer output compare active/inactive delay (in us)
1002:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval Compare value  (between Min_Data=0 and Max_Data=65535)
1003:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1004:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define __LL_TIM_CALC_DELAY(__TIMCLK__, __PSC__, __DELAY__)  \
1005:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   ((uint32_t)(((uint64_t)(__TIMCLK__) * (uint64_t)(__DELAY__)) \
1006:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****               / ((uint64_t)1000000U * (uint64_t)((__PSC__) + 1U))))
1007:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1008:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1009:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  HELPER macro calculating the auto-reload value to achieve the required pulse duration
1010:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         (when the timer operates in one pulse mode).
1011:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_PULSE (1000000, @ref LL_TIM_GetPrescaler (), 10, 20);
1012:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
1013:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __PSC__ prescaler
1014:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __DELAY__ timer output compare active/inactive delay (in us)
1015:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __PULSE__ pulse duration (in us)
1016:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval Auto-reload value  (between Min_Data=0 and Max_Data=65535)
1017:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1018:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define __LL_TIM_CALC_PULSE(__TIMCLK__, __PSC__, __DELAY__, __PULSE__)  \
1019:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   ((uint32_t)(__LL_TIM_CALC_DELAY((__TIMCLK__), (__PSC__), (__PULSE__)) \
1020:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****               + __LL_TIM_CALC_DELAY((__TIMCLK__), (__PSC__), (__DELAY__))))
1021:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1022:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1023:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  HELPER macro retrieving the ratio of the input capture prescaler
1024:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_GET_ICPSC_RATIO (@ref LL_TIM_IC_GetPrescaler ());
1025:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __ICPSC__ This parameter can be one of the following values:
1026:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV1
1027:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV2
1028:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV4
1029:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV8
1030:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval Input capture prescaler ratio (1, 2, 4 or 8)
1031:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1032:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define __LL_TIM_GET_ICPSC_RATIO(__ICPSC__)  \
1033:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   ((uint32_t)(0x01U << (((__ICPSC__) >> 16U) >> TIM_CCMR1_IC1PSC_Pos)))
1034:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
ARM GAS  /tmp/cc3R50AM.s 			page 20


1035:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1036:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1037:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
1038:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1039:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1040:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /* Exported functions --------------------------------------------------------*/
1041:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_Exported_Functions TIM Exported Functions
1042:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
1043:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1044:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1045:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Time_Base Time Base configuration
1046:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
1047:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1048:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1049:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Enable timer counter.
1050:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR1          CEN           LL_TIM_EnableCounter
1051:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1052:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1053:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1054:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableCounter(TIM_TypeDef *TIMx)
1055:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1056:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   SET_BIT(TIMx->CR1, TIM_CR1_CEN);
1057:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1058:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1059:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1060:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Disable timer counter.
1061:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR1          CEN           LL_TIM_DisableCounter
1062:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1063:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1064:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1065:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableCounter(TIM_TypeDef *TIMx)
1066:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1067:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR1, TIM_CR1_CEN);
1068:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1069:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1070:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1071:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Indicates whether the timer counter is enabled.
1072:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR1          CEN           LL_TIM_IsEnabledCounter
1073:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1074:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
1075:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1076:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledCounter(const TIM_TypeDef *TIMx)
1077:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1078:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return ((READ_BIT(TIMx->CR1, TIM_CR1_CEN) == (TIM_CR1_CEN)) ? 1UL : 0UL);
1079:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1080:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1081:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1082:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Enable update event generation.
1083:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR1          UDIS          LL_TIM_EnableUpdateEvent
1084:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1085:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1086:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1087:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableUpdateEvent(TIM_TypeDef *TIMx)
1088:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1089:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR1, TIM_CR1_UDIS);
1090:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1091:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
ARM GAS  /tmp/cc3R50AM.s 			page 21


1092:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1093:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Disable update event generation.
1094:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR1          UDIS          LL_TIM_DisableUpdateEvent
1095:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1096:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1097:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1098:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableUpdateEvent(TIM_TypeDef *TIMx)
1099:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1100:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   SET_BIT(TIMx->CR1, TIM_CR1_UDIS);
1101:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1102:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1103:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1104:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Indicates whether update event generation is enabled.
1105:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR1          UDIS          LL_TIM_IsEnabledUpdateEvent
1106:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1107:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval Inverted state of bit (0 or 1).
1108:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1109:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledUpdateEvent(const TIM_TypeDef *TIMx)
1110:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1111:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return ((READ_BIT(TIMx->CR1, TIM_CR1_UDIS) == (uint32_t)RESET) ? 1UL : 0UL);
1112:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1113:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1114:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1115:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set update event source
1116:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Update event source set to LL_TIM_UPDATESOURCE_REGULAR: any of the following events
1117:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       generate an update interrupt or DMA request if enabled:
1118:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *        - Counter overflow/underflow
1119:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *        - Setting the UG bit
1120:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *        - Update generation through the slave mode controller
1121:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Update event source set to LL_TIM_UPDATESOURCE_COUNTER: only counter
1122:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       overflow/underflow generates an update interrupt or DMA request if enabled.
1123:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR1          URS           LL_TIM_SetUpdateSource
1124:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1125:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  UpdateSource This parameter can be one of the following values:
1126:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_UPDATESOURCE_REGULAR
1127:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_UPDATESOURCE_COUNTER
1128:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1129:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1130:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetUpdateSource(TIM_TypeDef *TIMx, uint32_t UpdateSource)
1131:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1132:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(TIMx->CR1, TIM_CR1_URS, UpdateSource);
1133:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1134:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1135:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1136:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get actual event update source
1137:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR1          URS           LL_TIM_GetUpdateSource
1138:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1139:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1140:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_UPDATESOURCE_REGULAR
1141:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_UPDATESOURCE_COUNTER
1142:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1143:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetUpdateSource(const TIM_TypeDef *TIMx)
1144:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1145:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_URS));
1146:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1147:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1148:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
ARM GAS  /tmp/cc3R50AM.s 			page 22


1149:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set one pulse mode (one shot v.s. repetitive).
1150:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR1          OPM           LL_TIM_SetOnePulseMode
1151:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1152:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  OnePulseMode This parameter can be one of the following values:
1153:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ONEPULSEMODE_SINGLE
1154:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ONEPULSEMODE_REPETITIVE
1155:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1156:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1157:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetOnePulseMode(TIM_TypeDef *TIMx, uint32_t OnePulseMode)
1158:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1159:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(TIMx->CR1, TIM_CR1_OPM, OnePulseMode);
1160:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1161:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1162:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1163:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get actual one pulse mode.
1164:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR1          OPM           LL_TIM_GetOnePulseMode
1165:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1166:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1167:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ONEPULSEMODE_SINGLE
1168:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ONEPULSEMODE_REPETITIVE
1169:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1170:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetOnePulseMode(const TIM_TypeDef *TIMx)
1171:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1172:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_OPM));
1173:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1174:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1175:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1176:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set the timer counter counting mode.
1177:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx) can be used to
1178:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       check whether or not the counter mode selection feature is supported
1179:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       by a timer instance.
1180:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Switching from Center Aligned counter mode to Edge counter mode (or reverse)
1181:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       requires a timer reset to avoid unexpected direction
1182:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       due to DIR bit readonly in center aligned mode.
1183:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR1          DIR           LL_TIM_SetCounterMode\n
1184:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CR1          CMS           LL_TIM_SetCounterMode
1185:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1186:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  CounterMode This parameter can be one of the following values:
1187:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_UP
1188:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_DOWN
1189:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_UP
1190:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_DOWN
1191:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_UP_DOWN
1192:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1193:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1194:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetCounterMode(TIM_TypeDef *TIMx, uint32_t CounterMode)
1195:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1196:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(TIMx->CR1, (TIM_CR1_DIR | TIM_CR1_CMS), CounterMode);
1197:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1198:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1199:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1200:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get actual counter mode.
1201:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx) can be used to
1202:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       check whether or not the counter mode selection feature is supported
1203:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       by a timer instance.
1204:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR1          DIR           LL_TIM_GetCounterMode\n
1205:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CR1          CMS           LL_TIM_GetCounterMode
ARM GAS  /tmp/cc3R50AM.s 			page 23


1206:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1207:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1208:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_UP
1209:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_DOWN
1210:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_UP
1211:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_DOWN
1212:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_UP_DOWN
1213:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1214:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetCounterMode(const TIM_TypeDef *TIMx)
1215:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1216:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t counter_mode;
1217:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1218:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   counter_mode = (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_CMS));
1219:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1220:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   if (counter_mode == 0U)
1221:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   {
1222:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****     counter_mode = (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_DIR));
1223:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   }
1224:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1225:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return counter_mode;
1226:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1227:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1228:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1229:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Enable auto-reload (ARR) preload.
1230:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR1          ARPE          LL_TIM_EnableARRPreload
1231:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1232:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1233:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1234:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableARRPreload(TIM_TypeDef *TIMx)
1235:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1236:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   SET_BIT(TIMx->CR1, TIM_CR1_ARPE);
1237:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1238:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1239:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1240:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Disable auto-reload (ARR) preload.
1241:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR1          ARPE          LL_TIM_DisableARRPreload
1242:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1243:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1244:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1245:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableARRPreload(TIM_TypeDef *TIMx)
1246:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1247:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR1, TIM_CR1_ARPE);
1248:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1249:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1250:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1251:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Indicates whether auto-reload (ARR) preload is enabled.
1252:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR1          ARPE          LL_TIM_IsEnabledARRPreload
1253:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1254:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
1255:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1256:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledARRPreload(const TIM_TypeDef *TIMx)
1257:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1258:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return ((READ_BIT(TIMx->CR1, TIM_CR1_ARPE) == (TIM_CR1_ARPE)) ? 1UL : 0UL);
1259:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1260:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1261:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1262:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set the division ratio between the timer clock  and the sampling clock used by the dead
ARM GAS  /tmp/cc3R50AM.s 			page 24


1263:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         (when supported) and the digital filters.
1264:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx) can be used to check
1265:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       whether or not the clock division feature is supported by the timer
1266:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       instance.
1267:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR1          CKD           LL_TIM_SetClockDivision
1268:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1269:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  ClockDivision This parameter can be one of the following values:
1270:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV1
1271:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV2
1272:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV4
1273:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1274:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1275:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetClockDivision(TIM_TypeDef *TIMx, uint32_t ClockDivision)
1276:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1277:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(TIMx->CR1, TIM_CR1_CKD, ClockDivision);
1278:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1279:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1280:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1281:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get the actual division ratio between the timer clock  and the sampling clock used by t
1282:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         generators (when supported) and the digital filters.
1283:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx) can be used to check
1284:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       whether or not the clock division feature is supported by the timer
1285:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       instance.
1286:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR1          CKD           LL_TIM_GetClockDivision
1287:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1288:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1289:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV1
1290:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV2
1291:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV4
1292:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1293:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetClockDivision(const TIM_TypeDef *TIMx)
1294:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1295:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_CKD));
1296:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1297:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1298:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1299:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set the counter value.
1300:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CNT          CNT           LL_TIM_SetCounter
1301:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1302:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Counter Counter value (between Min_Data=0 and Max_Data=0xFFFF)
1303:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1304:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1305:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetCounter(TIM_TypeDef *TIMx, uint32_t Counter)
1306:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1307:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   WRITE_REG(TIMx->CNT, Counter);
1308:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1309:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1310:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1311:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get the counter value.
1312:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CNT          CNT           LL_TIM_GetCounter
1313:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1314:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval Counter value (between Min_Data=0 and Max_Data=0xFFFF)
1315:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1316:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetCounter(const TIM_TypeDef *TIMx)
1317:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1318:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CNT));
1319:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
ARM GAS  /tmp/cc3R50AM.s 			page 25


1320:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1321:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1322:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get the current direction of the counter
1323:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR1          DIR           LL_TIM_GetDirection
1324:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1325:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1326:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERDIRECTION_UP
1327:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERDIRECTION_DOWN
1328:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1329:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetDirection(const TIM_TypeDef *TIMx)
1330:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1331:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_DIR));
1332:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1333:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1334:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1335:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set the prescaler value.
1336:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note The counter clock frequency CK_CNT is equal to fCK_PSC / (PSC[15:0] + 1).
1337:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note The prescaler can be changed on the fly as this control register is buffered. The new
1338:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       prescaler ratio is taken into account at the next update event.
1339:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Helper macro @ref __LL_TIM_CALC_PSC can be used to calculate the Prescaler parameter
1340:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll PSC          PSC           LL_TIM_SetPrescaler
1341:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1342:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Prescaler between Min_Data=0 and Max_Data=65535
1343:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1344:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1345:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetPrescaler(TIM_TypeDef *TIMx, uint32_t Prescaler)
1346:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1347:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   WRITE_REG(TIMx->PSC, Prescaler);
1348:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1349:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1350:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1351:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get the prescaler value.
1352:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll PSC          PSC           LL_TIM_GetPrescaler
1353:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1354:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval  Prescaler value between Min_Data=0 and Max_Data=65535
1355:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1356:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetPrescaler(const TIM_TypeDef *TIMx)
1357:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1358:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->PSC));
1359:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1360:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1361:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1362:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set the auto-reload value.
1363:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note The counter is blocked while the auto-reload value is null.
1364:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Helper macro @ref __LL_TIM_CALC_ARR can be used to calculate the AutoReload parameter
1365:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll ARR          ARR           LL_TIM_SetAutoReload
1366:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1367:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  AutoReload between Min_Data=0 and Max_Data=65535
1368:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1369:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1370:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetAutoReload(TIM_TypeDef *TIMx, uint32_t AutoReload)
1371:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1372:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   WRITE_REG(TIMx->ARR, AutoReload);
1373:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1374:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1375:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1376:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get the auto-reload value.
ARM GAS  /tmp/cc3R50AM.s 			page 26


1377:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll ARR          ARR           LL_TIM_GetAutoReload
1378:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1379:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval Auto-reload value
1380:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1381:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetAutoReload(const TIM_TypeDef *TIMx)
1382:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
  56              		.loc 1 1382 1
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 8
  59              		@ frame_needed = 1, uses_anonymous_args = 0
  60              		@ link register save eliminated.
  61 0000 80B4     		push	{r7}
  62              	.LCFI0:
  63              		.cfi_def_cfa_offset 4
  64              		.cfi_offset 7, -4
  65 0002 83B0     		sub	sp, sp, #12
  66              	.LCFI1:
  67              		.cfi_def_cfa_offset 16
  68 0004 00AF     		add	r7, sp, #0
  69              	.LCFI2:
  70              		.cfi_def_cfa_register 7
  71 0006 7860     		str	r0, [r7, #4]
1383:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->ARR));
  72              		.loc 1 1383 10
  73 0008 7B68     		ldr	r3, [r7, #4]
  74 000a DB6A     		ldr	r3, [r3, #44]
1384:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
  75              		.loc 1 1384 1
  76 000c 1846     		mov	r0, r3
  77 000e 0C37     		adds	r7, r7, #12
  78              	.LCFI3:
  79              		.cfi_def_cfa_offset 4
  80 0010 BD46     		mov	sp, r7
  81              	.LCFI4:
  82              		.cfi_def_cfa_register 13
  83              		@ sp needed
  84 0012 80BC     		pop	{r7}
  85              	.LCFI5:
  86              		.cfi_restore 7
  87              		.cfi_def_cfa_offset 0
  88 0014 7047     		bx	lr
  89              		.cfi_endproc
  90              	.LFE88:
  92              		.section	.text.LL_TIM_OC_SetCompareCH1,"ax",%progbits
  93              		.align	1
  94              		.syntax unified
  95              		.thumb
  96              		.thumb_func
  98              	LL_TIM_OC_SetCompareCH1:
  99              	.LFB117:
1385:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1386:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1387:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set the repetition counter value.
1388:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx) can be used to check
1389:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       whether or not a timer instance supports a repetition counter.
1390:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll RCR          REP           LL_TIM_SetRepetitionCounter
1391:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
ARM GAS  /tmp/cc3R50AM.s 			page 27


1392:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  RepetitionCounter between Min_Data=0 and Max_Data=255 or 65535 for advanced timer.
1393:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1394:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1395:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetRepetitionCounter(TIM_TypeDef *TIMx, uint32_t RepetitionCounter)
1396:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1397:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   WRITE_REG(TIMx->RCR, RepetitionCounter);
1398:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1399:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1400:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1401:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get the repetition counter value.
1402:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx) can be used to check
1403:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       whether or not a timer instance supports a repetition counter.
1404:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll RCR          REP           LL_TIM_GetRepetitionCounter
1405:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1406:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval Repetition counter value
1407:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1408:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetRepetitionCounter(const TIM_TypeDef *TIMx)
1409:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1410:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->RCR));
1411:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1412:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1413:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1414:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
1415:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1416:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1417:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Capture_Compare Capture Compare configuration
1418:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
1419:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1420:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1421:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Enable  the capture/compare control bits (CCxE, CCxNE and OCxM) preload.
1422:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note CCxE, CCxNE and OCxM bits are preloaded, after having been written,
1423:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       they are updated only when a commutation event (COM) occurs.
1424:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Only on channels that have a complementary output.
1425:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro IS_TIM_COMMUTATION_EVENT_INSTANCE(TIMx) can be used to check
1426:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       whether or not a timer instance is able to generate a commutation event.
1427:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR2          CCPC          LL_TIM_CC_EnablePreload
1428:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1429:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1430:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1431:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_EnablePreload(TIM_TypeDef *TIMx)
1432:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1433:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   SET_BIT(TIMx->CR2, TIM_CR2_CCPC);
1434:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1435:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1436:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1437:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Disable  the capture/compare control bits (CCxE, CCxNE and OCxM) preload.
1438:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro IS_TIM_COMMUTATION_EVENT_INSTANCE(TIMx) can be used to check
1439:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       whether or not a timer instance is able to generate a commutation event.
1440:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR2          CCPC          LL_TIM_CC_DisablePreload
1441:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1442:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1443:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1444:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_DisablePreload(TIM_TypeDef *TIMx)
1445:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1446:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR2, TIM_CR2_CCPC);
1447:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1448:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
ARM GAS  /tmp/cc3R50AM.s 			page 28


1449:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1450:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set the updated source of the capture/compare control bits (CCxE, CCxNE and OCxM).
1451:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro IS_TIM_COMMUTATION_EVENT_INSTANCE(TIMx) can be used to check
1452:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       whether or not a timer instance is able to generate a commutation event.
1453:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR2          CCUS          LL_TIM_CC_SetUpdate
1454:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1455:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  CCUpdateSource This parameter can be one of the following values:
1456:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCUPDATESOURCE_COMG_ONLY
1457:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCUPDATESOURCE_COMG_AND_TRGI
1458:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1459:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1460:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_SetUpdate(TIM_TypeDef *TIMx, uint32_t CCUpdateSource)
1461:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1462:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(TIMx->CR2, TIM_CR2_CCUS, CCUpdateSource);
1463:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1464:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1465:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1466:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set the trigger of the capture/compare DMA request.
1467:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR2          CCDS          LL_TIM_CC_SetDMAReqTrigger
1468:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1469:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  DMAReqTrigger This parameter can be one of the following values:
1470:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCDMAREQUEST_CC
1471:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCDMAREQUEST_UPDATE
1472:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1473:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1474:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_SetDMAReqTrigger(TIM_TypeDef *TIMx, uint32_t DMAReqTrigger)
1475:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1476:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(TIMx->CR2, TIM_CR2_CCDS, DMAReqTrigger);
1477:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1478:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1479:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1480:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get actual trigger of the capture/compare DMA request.
1481:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR2          CCDS          LL_TIM_CC_GetDMAReqTrigger
1482:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1483:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1484:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCDMAREQUEST_CC
1485:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCDMAREQUEST_UPDATE
1486:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1487:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_CC_GetDMAReqTrigger(const TIM_TypeDef *TIMx)
1488:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1489:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR2, TIM_CR2_CCDS));
1490:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1491:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1492:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1493:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set the lock level to freeze the
1494:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         configuration of several capture/compare parameters.
1495:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
1496:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       the lock mechanism is supported by a timer instance.
1497:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll BDTR         LOCK          LL_TIM_CC_SetLockLevel
1498:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1499:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  LockLevel This parameter can be one of the following values:
1500:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_LOCKLEVEL_OFF
1501:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_LOCKLEVEL_1
1502:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_LOCKLEVEL_2
1503:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_LOCKLEVEL_3
1504:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1505:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
ARM GAS  /tmp/cc3R50AM.s 			page 29


1506:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_SetLockLevel(TIM_TypeDef *TIMx, uint32_t LockLevel)
1507:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1508:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(TIMx->BDTR, TIM_BDTR_LOCK, LockLevel);
1509:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1510:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1511:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1512:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Enable capture/compare channels.
1513:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCER         CC1E          LL_TIM_CC_EnableChannel\n
1514:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC1NE         LL_TIM_CC_EnableChannel\n
1515:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC2E          LL_TIM_CC_EnableChannel\n
1516:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC2NE         LL_TIM_CC_EnableChannel\n
1517:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC3E          LL_TIM_CC_EnableChannel\n
1518:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC3NE         LL_TIM_CC_EnableChannel\n
1519:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC4E          LL_TIM_CC_EnableChannel
1520:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1521:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channels This parameter can be a combination of the following values:
1522:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1523:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
1524:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1525:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
1526:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1527:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
1528:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1529:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1530:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1531:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_EnableChannel(TIM_TypeDef *TIMx, uint32_t Channels)
1532:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1533:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   SET_BIT(TIMx->CCER, Channels);
1534:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1535:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1536:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1537:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Disable capture/compare channels.
1538:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCER         CC1E          LL_TIM_CC_DisableChannel\n
1539:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC1NE         LL_TIM_CC_DisableChannel\n
1540:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC2E          LL_TIM_CC_DisableChannel\n
1541:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC2NE         LL_TIM_CC_DisableChannel\n
1542:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC3E          LL_TIM_CC_DisableChannel\n
1543:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC3NE         LL_TIM_CC_DisableChannel\n
1544:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC4E          LL_TIM_CC_DisableChannel
1545:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1546:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channels This parameter can be a combination of the following values:
1547:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1548:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
1549:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1550:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
1551:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1552:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
1553:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1554:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1555:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1556:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_DisableChannel(TIM_TypeDef *TIMx, uint32_t Channels)
1557:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1558:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   CLEAR_BIT(TIMx->CCER, Channels);
1559:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1560:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1561:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1562:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Indicate whether channel(s) is(are) enabled.
ARM GAS  /tmp/cc3R50AM.s 			page 30


1563:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCER         CC1E          LL_TIM_CC_IsEnabledChannel\n
1564:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC1NE         LL_TIM_CC_IsEnabledChannel\n
1565:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC2E          LL_TIM_CC_IsEnabledChannel\n
1566:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC2NE         LL_TIM_CC_IsEnabledChannel\n
1567:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC3E          LL_TIM_CC_IsEnabledChannel\n
1568:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC3NE         LL_TIM_CC_IsEnabledChannel\n
1569:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC4E          LL_TIM_CC_IsEnabledChannel
1570:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1571:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channels This parameter can be a combination of the following values:
1572:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1573:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
1574:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1575:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
1576:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1577:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
1578:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1579:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
1580:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1581:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_CC_IsEnabledChannel(const TIM_TypeDef *TIMx, uint32_t Channels)
1582:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1583:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return ((READ_BIT(TIMx->CCER, Channels) == (Channels)) ? 1UL : 0UL);
1584:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1585:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1586:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1587:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
1588:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1589:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1590:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Output_Channel Output channel configuration
1591:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
1592:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1593:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1594:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Configure an output channel.
1595:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCMR1        CC1S          LL_TIM_OC_ConfigOutput\n
1596:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR1        CC2S          LL_TIM_OC_ConfigOutput\n
1597:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        CC3S          LL_TIM_OC_ConfigOutput\n
1598:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        CC4S          LL_TIM_OC_ConfigOutput\n
1599:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC1P          LL_TIM_OC_ConfigOutput\n
1600:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_OC_ConfigOutput\n
1601:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_OC_ConfigOutput\n
1602:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_OC_ConfigOutput\n
1603:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CR2          OIS1          LL_TIM_OC_ConfigOutput\n
1604:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CR2          OIS2          LL_TIM_OC_ConfigOutput\n
1605:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CR2          OIS3          LL_TIM_OC_ConfigOutput\n
1606:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CR2          OIS4          LL_TIM_OC_ConfigOutput
1607:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1608:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1609:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1610:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1611:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1612:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1613:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Configuration This parameter must be a combination of all the following values:
1614:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_HIGH or @ref LL_TIM_OCPOLARITY_LOW
1615:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCIDLESTATE_LOW or @ref LL_TIM_OCIDLESTATE_HIGH
1616:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1617:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1618:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_ConfigOutput(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t Configura
1619:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
ARM GAS  /tmp/cc3R50AM.s 			page 31


1620:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1621:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
1622:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   CLEAR_BIT(*pReg, (TIM_CCMR1_CC1S << SHIFT_TAB_OCxx[iChannel]));
1623:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(TIMx->CCER, (TIM_CCER_CC1P << SHIFT_TAB_CCxP[iChannel]),
1624:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****              (Configuration & TIM_CCER_CC1P) << SHIFT_TAB_CCxP[iChannel]);
1625:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(TIMx->CR2, (TIM_CR2_OIS1 << SHIFT_TAB_OISx[iChannel]),
1626:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****              (Configuration & TIM_CR2_OIS1) << SHIFT_TAB_OISx[iChannel]);
1627:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1628:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1629:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1630:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Define the behavior of the output reference signal OCxREF from which
1631:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         OCx and OCxN (when relevant) are derived.
1632:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1M          LL_TIM_OC_SetMode\n
1633:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR1        OC2M          LL_TIM_OC_SetMode\n
1634:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC3M          LL_TIM_OC_SetMode\n
1635:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC4M          LL_TIM_OC_SetMode
1636:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1637:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1638:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1639:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1640:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1641:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1642:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Mode This parameter can be one of the following values:
1643:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FROZEN
1644:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_ACTIVE
1645:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_INACTIVE
1646:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_TOGGLE
1647:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FORCED_INACTIVE
1648:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FORCED_ACTIVE
1649:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_PWM1
1650:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_PWM2
1651:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1652:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1653:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetMode(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t Mode)
1654:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1655:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1656:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
1657:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_OC1M  | TIM_CCMR1_CC1S) << SHIFT_TAB_OCxx[iChannel]), Mode << SHIFT
1658:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1659:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1660:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1661:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get the output compare mode of an output channel.
1662:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1M          LL_TIM_OC_GetMode\n
1663:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR1        OC2M          LL_TIM_OC_GetMode\n
1664:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC3M          LL_TIM_OC_GetMode\n
1665:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC4M          LL_TIM_OC_GetMode
1666:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1667:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1668:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1669:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1670:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1671:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1672:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1673:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FROZEN
1674:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_ACTIVE
1675:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_INACTIVE
1676:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_TOGGLE
ARM GAS  /tmp/cc3R50AM.s 			page 32


1677:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FORCED_INACTIVE
1678:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FORCED_ACTIVE
1679:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_PWM1
1680:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_PWM2
1681:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1682:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetMode(const TIM_TypeDef *TIMx, uint32_t Channel)
1683:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1684:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1685:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CC
1686:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (READ_BIT(*pReg, ((TIM_CCMR1_OC1M | TIM_CCMR1_CC1S) << SHIFT_TAB_OCxx[iChannel])) >> SHIFT
1687:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1688:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1689:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1690:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set the polarity of an output channel.
1691:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCER         CC1P          LL_TIM_OC_SetPolarity\n
1692:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC1NP         LL_TIM_OC_SetPolarity\n
1693:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_OC_SetPolarity\n
1694:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC2NP         LL_TIM_OC_SetPolarity\n
1695:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_OC_SetPolarity\n
1696:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC3NP         LL_TIM_OC_SetPolarity\n
1697:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_OC_SetPolarity
1698:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1699:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1700:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1701:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
1702:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1703:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
1704:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1705:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
1706:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1707:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Polarity This parameter can be one of the following values:
1708:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_HIGH
1709:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_LOW
1710:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1711:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1712:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetPolarity(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t Polarity)
1713:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1714:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1715:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(TIMx->CCER, (TIM_CCER_CC1P << SHIFT_TAB_CCxP[iChannel]),  Polarity << SHIFT_TAB_CCxP[i
1716:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1717:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1718:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1719:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get the polarity of an output channel.
1720:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCER         CC1P          LL_TIM_OC_GetPolarity\n
1721:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC1NP         LL_TIM_OC_GetPolarity\n
1722:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_OC_GetPolarity\n
1723:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC2NP         LL_TIM_OC_GetPolarity\n
1724:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_OC_GetPolarity\n
1725:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC3NP         LL_TIM_OC_GetPolarity\n
1726:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_OC_GetPolarity
1727:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1728:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1729:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1730:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
1731:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1732:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
1733:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
ARM GAS  /tmp/cc3R50AM.s 			page 33


1734:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
1735:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1736:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1737:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_HIGH
1738:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_LOW
1739:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1740:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetPolarity(const TIM_TypeDef *TIMx, uint32_t Channel)
1741:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1742:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1743:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (READ_BIT(TIMx->CCER, (TIM_CCER_CC1P << SHIFT_TAB_CCxP[iChannel])) >> SHIFT_TAB_CCxP[iChan
1744:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1745:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1746:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1747:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set the IDLE state of an output channel
1748:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note This function is significant only for the timer instances
1749:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       supporting the break feature. Macro IS_TIM_BREAK_INSTANCE(TIMx)
1750:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       can be used to check whether or not a timer instance provides
1751:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       a break input.
1752:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR2         OIS1          LL_TIM_OC_SetIdleState\n
1753:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CR2         OIS1N         LL_TIM_OC_SetIdleState\n
1754:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CR2         OIS2          LL_TIM_OC_SetIdleState\n
1755:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CR2         OIS2N         LL_TIM_OC_SetIdleState\n
1756:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CR2         OIS3          LL_TIM_OC_SetIdleState\n
1757:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CR2         OIS3N         LL_TIM_OC_SetIdleState\n
1758:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CR2         OIS4          LL_TIM_OC_SetIdleState
1759:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1760:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1761:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1762:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
1763:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1764:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
1765:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1766:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
1767:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1768:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  IdleState This parameter can be one of the following values:
1769:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCIDLESTATE_LOW
1770:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCIDLESTATE_HIGH
1771:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1772:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1773:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetIdleState(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t IdleState
1774:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1775:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1776:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(TIMx->CR2, (TIM_CR2_OIS1 << SHIFT_TAB_OISx[iChannel]),  IdleState << SHIFT_TAB_OISx[iC
1777:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1778:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1779:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1780:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get the IDLE state of an output channel
1781:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR2         OIS1          LL_TIM_OC_GetIdleState\n
1782:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CR2         OIS1N         LL_TIM_OC_GetIdleState\n
1783:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CR2         OIS2          LL_TIM_OC_GetIdleState\n
1784:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CR2         OIS2N         LL_TIM_OC_GetIdleState\n
1785:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CR2         OIS3          LL_TIM_OC_GetIdleState\n
1786:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CR2         OIS3N         LL_TIM_OC_GetIdleState\n
1787:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CR2         OIS4          LL_TIM_OC_GetIdleState
1788:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1789:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1790:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
ARM GAS  /tmp/cc3R50AM.s 			page 34


1791:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
1792:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1793:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
1794:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1795:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
1796:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1797:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1798:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCIDLESTATE_LOW
1799:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCIDLESTATE_HIGH
1800:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1801:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetIdleState(const TIM_TypeDef *TIMx, uint32_t Channel)
1802:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1803:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1804:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (READ_BIT(TIMx->CR2, (TIM_CR2_OIS1 << SHIFT_TAB_OISx[iChannel])) >> SHIFT_TAB_OISx[iChanne
1805:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1806:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1807:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1808:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Enable fast mode for the output channel.
1809:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Acts only if the channel is configured in PWM1 or PWM2 mode.
1810:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1FE          LL_TIM_OC_EnableFast\n
1811:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR1        OC2FE          LL_TIM_OC_EnableFast\n
1812:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC3FE          LL_TIM_OC_EnableFast\n
1813:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC4FE          LL_TIM_OC_EnableFast
1814:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1815:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1816:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1817:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1818:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1819:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1820:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1821:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1822:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_EnableFast(TIM_TypeDef *TIMx, uint32_t Channel)
1823:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1824:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1825:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
1826:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   SET_BIT(*pReg, (TIM_CCMR1_OC1FE << SHIFT_TAB_OCxx[iChannel]));
1827:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1828:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1829:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1830:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1831:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Disable fast mode for the output channel.
1832:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1FE          LL_TIM_OC_DisableFast\n
1833:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR1        OC2FE          LL_TIM_OC_DisableFast\n
1834:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC3FE          LL_TIM_OC_DisableFast\n
1835:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC4FE          LL_TIM_OC_DisableFast
1836:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1837:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1838:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1839:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1840:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1841:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1842:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1843:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1844:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_DisableFast(TIM_TypeDef *TIMx, uint32_t Channel)
1845:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1846:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1847:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
ARM GAS  /tmp/cc3R50AM.s 			page 35


1848:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   CLEAR_BIT(*pReg, (TIM_CCMR1_OC1FE << SHIFT_TAB_OCxx[iChannel]));
1849:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1850:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1851:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1852:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1853:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Indicates whether fast mode is enabled for the output channel.
1854:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1FE          LL_TIM_OC_IsEnabledFast\n
1855:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR1        OC2FE          LL_TIM_OC_IsEnabledFast\n
1856:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC3FE          LL_TIM_OC_IsEnabledFast\n
1857:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC4FE          LL_TIM_OC_IsEnabledFast\n
1858:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1859:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1860:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1861:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1862:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1863:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1864:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
1865:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1866:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_IsEnabledFast(const TIM_TypeDef *TIMx, uint32_t Channel)
1867:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1868:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1869:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CC
1870:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t bitfield = TIM_CCMR1_OC1FE << SHIFT_TAB_OCxx[iChannel];
1871:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return ((READ_BIT(*pReg, bitfield) == bitfield) ? 1UL : 0UL);
1872:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1873:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1874:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1875:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Enable compare register (TIMx_CCRx) preload for the output channel.
1876:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1PE          LL_TIM_OC_EnablePreload\n
1877:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR1        OC2PE          LL_TIM_OC_EnablePreload\n
1878:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC3PE          LL_TIM_OC_EnablePreload\n
1879:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC4PE          LL_TIM_OC_EnablePreload
1880:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1881:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1882:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1883:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1884:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1885:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1886:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1887:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1888:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_EnablePreload(TIM_TypeDef *TIMx, uint32_t Channel)
1889:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1890:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1891:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
1892:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   SET_BIT(*pReg, (TIM_CCMR1_OC1PE << SHIFT_TAB_OCxx[iChannel]));
1893:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1894:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1895:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1896:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Disable compare register (TIMx_CCRx) preload for the output channel.
1897:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1PE          LL_TIM_OC_DisablePreload\n
1898:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR1        OC2PE          LL_TIM_OC_DisablePreload\n
1899:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC3PE          LL_TIM_OC_DisablePreload\n
1900:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC4PE          LL_TIM_OC_DisablePreload
1901:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1902:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1903:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1904:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
ARM GAS  /tmp/cc3R50AM.s 			page 36


1905:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1906:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1907:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1908:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1909:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_DisablePreload(TIM_TypeDef *TIMx, uint32_t Channel)
1910:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1911:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1912:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
1913:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   CLEAR_BIT(*pReg, (TIM_CCMR1_OC1PE << SHIFT_TAB_OCxx[iChannel]));
1914:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1915:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1916:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1917:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Indicates whether compare register (TIMx_CCRx) preload is enabled for the output channe
1918:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1PE          LL_TIM_OC_IsEnabledPreload\n
1919:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR1        OC2PE          LL_TIM_OC_IsEnabledPreload\n
1920:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC3PE          LL_TIM_OC_IsEnabledPreload\n
1921:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC4PE          LL_TIM_OC_IsEnabledPreload\n
1922:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1923:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1924:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1925:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1926:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1927:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1928:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
1929:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1930:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_IsEnabledPreload(const TIM_TypeDef *TIMx, uint32_t Channel)
1931:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1932:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1933:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CC
1934:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t bitfield = TIM_CCMR1_OC1PE << SHIFT_TAB_OCxx[iChannel];
1935:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return ((READ_BIT(*pReg, bitfield) == bitfield) ? 1UL : 0UL);
1936:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1937:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1938:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1939:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Enable clearing the output channel on an external event.
1940:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note This function can only be used in Output compare and PWM modes. It does not work in Force
1941:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro IS_TIM_OCXREF_CLEAR_INSTANCE(TIMx) can be used to check whether
1942:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       or not a timer instance can clear the OCxREF signal on an external event.
1943:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1CE          LL_TIM_OC_EnableClear\n
1944:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR1        OC2CE          LL_TIM_OC_EnableClear\n
1945:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC3CE          LL_TIM_OC_EnableClear\n
1946:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC4CE          LL_TIM_OC_EnableClear
1947:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1948:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1949:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1950:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1951:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1952:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1953:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1954:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1955:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_EnableClear(TIM_TypeDef *TIMx, uint32_t Channel)
1956:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1957:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1958:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
1959:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   SET_BIT(*pReg, (TIM_CCMR1_OC1CE << SHIFT_TAB_OCxx[iChannel]));
1960:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1961:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
ARM GAS  /tmp/cc3R50AM.s 			page 37


1962:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1963:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Disable clearing the output channel on an external event.
1964:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro IS_TIM_OCXREF_CLEAR_INSTANCE(TIMx) can be used to check whether
1965:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       or not a timer instance can clear the OCxREF signal on an external event.
1966:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1CE          LL_TIM_OC_DisableClear\n
1967:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR1        OC2CE          LL_TIM_OC_DisableClear\n
1968:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC3CE          LL_TIM_OC_DisableClear\n
1969:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC4CE          LL_TIM_OC_DisableClear
1970:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1971:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1972:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1973:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1974:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1975:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1976:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1977:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1978:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_DisableClear(TIM_TypeDef *TIMx, uint32_t Channel)
1979:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1980:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1981:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
1982:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   CLEAR_BIT(*pReg, (TIM_CCMR1_OC1CE << SHIFT_TAB_OCxx[iChannel]));
1983:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1984:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1985:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1986:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Indicates clearing the output channel on an external event is enabled for the output ch
1987:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note This function enables clearing the output channel on an external event.
1988:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note This function can only be used in Output compare and PWM modes. It does not work in Force
1989:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro IS_TIM_OCXREF_CLEAR_INSTANCE(TIMx) can be used to check whether
1990:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       or not a timer instance can clear the OCxREF signal on an external event.
1991:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1CE          LL_TIM_OC_IsEnabledClear\n
1992:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR1        OC2CE          LL_TIM_OC_IsEnabledClear\n
1993:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC3CE          LL_TIM_OC_IsEnabledClear\n
1994:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC4CE          LL_TIM_OC_IsEnabledClear\n
1995:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1996:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1997:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1998:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1999:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2000:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2001:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2002:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2003:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_IsEnabledClear(const TIM_TypeDef *TIMx, uint32_t Channel)
2004:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2005:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2006:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CC
2007:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t bitfield = TIM_CCMR1_OC1CE << SHIFT_TAB_OCxx[iChannel];
2008:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return ((READ_BIT(*pReg, bitfield) == bitfield) ? 1UL : 0UL);
2009:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2010:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2011:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2012:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set the dead-time delay (delay inserted between the rising edge of the OCxREF signal an
2013:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         the Ocx and OCxN signals).
2014:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
2015:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       dead-time insertion feature is supported by a timer instance.
2016:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Helper macro @ref __LL_TIM_CALC_DEADTIME can be used to calculate the DeadTime parameter
2017:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll BDTR         DTG           LL_TIM_OC_SetDeadTime
2018:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
ARM GAS  /tmp/cc3R50AM.s 			page 38


2019:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  DeadTime between Min_Data=0 and Max_Data=255
2020:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
2021:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2022:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetDeadTime(TIM_TypeDef *TIMx, uint32_t DeadTime)
2023:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2024:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(TIMx->BDTR, TIM_BDTR_DTG, DeadTime);
2025:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2026:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2027:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2028:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set compare value for output channel 1 (TIMx_CCR1).
2029:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro IS_TIM_CC1_INSTANCE(TIMx) can be used to check whether or not
2030:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       output channel 1 is supported by a timer instance.
2031:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCR1         CCR1          LL_TIM_OC_SetCompareCH1
2032:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2033:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  CompareValue between Min_Data=0 and Max_Data=65535
2034:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
2035:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2036:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetCompareCH1(TIM_TypeDef *TIMx, uint32_t CompareValue)
2037:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
 100              		.loc 1 2037 1
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 8
 103              		@ frame_needed = 1, uses_anonymous_args = 0
 104              		@ link register save eliminated.
 105 0000 80B4     		push	{r7}
 106              	.LCFI6:
 107              		.cfi_def_cfa_offset 4
 108              		.cfi_offset 7, -4
 109 0002 83B0     		sub	sp, sp, #12
 110              	.LCFI7:
 111              		.cfi_def_cfa_offset 16
 112 0004 00AF     		add	r7, sp, #0
 113              	.LCFI8:
 114              		.cfi_def_cfa_register 7
 115 0006 7860     		str	r0, [r7, #4]
 116 0008 3960     		str	r1, [r7]
2038:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   WRITE_REG(TIMx->CCR1, CompareValue);
 117              		.loc 1 2038 3
 118 000a 7B68     		ldr	r3, [r7, #4]
 119 000c 3A68     		ldr	r2, [r7]
 120 000e 5A63     		str	r2, [r3, #52]
2039:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
 121              		.loc 1 2039 1
 122 0010 00BF     		nop
 123 0012 0C37     		adds	r7, r7, #12
 124              	.LCFI9:
 125              		.cfi_def_cfa_offset 4
 126 0014 BD46     		mov	sp, r7
 127              	.LCFI10:
 128              		.cfi_def_cfa_register 13
 129              		@ sp needed
 130 0016 80BC     		pop	{r7}
 131              	.LCFI11:
 132              		.cfi_restore 7
 133              		.cfi_def_cfa_offset 0
 134 0018 7047     		bx	lr
 135              		.cfi_endproc
ARM GAS  /tmp/cc3R50AM.s 			page 39


 136              	.LFE117:
 138              		.global	__aeabi_i2d
 139              		.global	__aeabi_ddiv
 140              		.global	__aeabi_dmul
 141              		.global	__aeabi_d2f
 142              		.global	__aeabi_fcmpgt
 143              		.section	.text.Set_And_Convert_Duty,"ax",%progbits
 144              		.align	1
 145              		.global	Set_And_Convert_Duty
 146              		.syntax unified
 147              		.thumb
 148              		.thumb_func
 150              	Set_And_Convert_Duty:
 151              	.LFB265:
 152              		.file 2 "Core/Src/PWM_Ctrl.c"
   1:Core/Src/PWM_Ctrl.c **** #include "PWM_Ctrl.h"
   2:Core/Src/PWM_Ctrl.c **** 
   3:Core/Src/PWM_Ctrl.c **** void Set_And_Convert_Duty(TIM_TypeDef *TIMX,int duty)
   4:Core/Src/PWM_Ctrl.c **** {
 153              		.loc 2 4 1
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 24
 156              		@ frame_needed = 1, uses_anonymous_args = 0
 157 0000 B0B5     		push	{r4, r5, r7, lr}
 158              	.LCFI12:
 159              		.cfi_def_cfa_offset 16
 160              		.cfi_offset 4, -16
 161              		.cfi_offset 5, -12
 162              		.cfi_offset 7, -8
 163              		.cfi_offset 14, -4
 164 0002 86B0     		sub	sp, sp, #24
 165              	.LCFI13:
 166              		.cfi_def_cfa_offset 40
 167 0004 00AF     		add	r7, sp, #0
 168              	.LCFI14:
 169              		.cfi_def_cfa_register 7
 170 0006 7860     		str	r0, [r7, #4]
 171 0008 3960     		str	r1, [r7]
   5:Core/Src/PWM_Ctrl.c ****    float v;
   6:Core/Src/PWM_Ctrl.c ****    int temp1;
   7:Core/Src/PWM_Ctrl.c ****    int temp = LL_TIM_GetAutoReload (TIMX)+1;
 172              		.loc 2 7 15
 173 000a 7868     		ldr	r0, [r7, #4]
 174 000c FFF7FEFF 		bl	LL_TIM_GetAutoReload
 175 0010 0346     		mov	r3, r0
 176              		.loc 2 7 42
 177 0012 0133     		adds	r3, r3, #1
 178              		.loc 2 7 8
 179 0014 7B61     		str	r3, [r7, #20]
   8:Core/Src/PWM_Ctrl.c ****    temp1 = duty*temp/100;
 180              		.loc 2 8 16
 181 0016 3B68     		ldr	r3, [r7]
 182 0018 7A69     		ldr	r2, [r7, #20]
 183 001a 02FB03F3 		mul	r3, r2, r3
 184              		.loc 2 8 10
 185 001e 214A     		ldr	r2, .L8
 186 0020 82FB0312 		smull	r1, r2, r2, r3
ARM GAS  /tmp/cc3R50AM.s 			page 40


 187 0024 5211     		asrs	r2, r2, #5
 188 0026 DB17     		asrs	r3, r3, #31
 189 0028 D31A     		subs	r3, r2, r3
 190 002a 3B61     		str	r3, [r7, #16]
   9:Core/Src/PWM_Ctrl.c ****   // v = (duty/100.0) *temp- temp1; /////////////   Revert the cnt
  10:Core/Src/PWM_Ctrl.c ****    v = (duty/100.0) *temp;
 191              		.loc 2 10 13
 192 002c 3868     		ldr	r0, [r7]
 193 002e FFF7FEFF 		bl	__aeabi_i2d
 194 0032 4FF00002 		mov	r2, #0
 195 0036 1C4B     		ldr	r3, .L8+4
 196 0038 FFF7FEFF 		bl	__aeabi_ddiv
 197 003c 0246     		mov	r2, r0
 198 003e 0B46     		mov	r3, r1
 199 0040 1446     		mov	r4, r2
 200 0042 1D46     		mov	r5, r3
 201              		.loc 2 10 21
 202 0044 7869     		ldr	r0, [r7, #20]
 203 0046 FFF7FEFF 		bl	__aeabi_i2d
 204 004a 0246     		mov	r2, r0
 205 004c 0B46     		mov	r3, r1
 206 004e 2046     		mov	r0, r4
 207 0050 2946     		mov	r1, r5
 208 0052 FFF7FEFF 		bl	__aeabi_dmul
 209 0056 0246     		mov	r2, r0
 210 0058 0B46     		mov	r3, r1
 211              		.loc 2 10 6
 212 005a 1046     		mov	r0, r2
 213 005c 1946     		mov	r1, r3
 214 005e FFF7FEFF 		bl	__aeabi_d2f
 215 0062 0346     		mov	r3, r0
 216 0064 FB60     		str	r3, [r7, #12]	@ float
  11:Core/Src/PWM_Ctrl.c ****    if (v > 0.5)
 217              		.loc 2 11 7
 218 0066 4FF07C51 		mov	r1, #1056964608
 219 006a F868     		ldr	r0, [r7, #12]	@ float
 220 006c FFF7FEFF 		bl	__aeabi_fcmpgt
 221 0070 0346     		mov	r3, r0
 222 0072 002B     		cmp	r3, #0
 223 0074 02D0     		beq	.L5
  12:Core/Src/PWM_Ctrl.c ****    {
  13:Core/Src/PWM_Ctrl.c ****       temp1 +=1;
 224              		.loc 2 13 13
 225 0076 3B69     		ldr	r3, [r7, #16]
 226 0078 0133     		adds	r3, r3, #1
 227 007a 3B61     		str	r3, [r7, #16]
 228              	.L5:
  14:Core/Src/PWM_Ctrl.c ****    }
  15:Core/Src/PWM_Ctrl.c ****    
  16:Core/Src/PWM_Ctrl.c **** 
  17:Core/Src/PWM_Ctrl.c ****    //temp -= duty*temp/100;    /////////////   Revert the cnt
  18:Core/Src/PWM_Ctrl.c **** 
  19:Core/Src/PWM_Ctrl.c ****    temp = duty*temp/100;  
 229              		.loc 2 19 15
 230 007c 3B68     		ldr	r3, [r7]
 231 007e 7A69     		ldr	r2, [r7, #20]
 232 0080 02FB03F3 		mul	r3, r2, r3
ARM GAS  /tmp/cc3R50AM.s 			page 41


 233              		.loc 2 19 9
 234 0084 074A     		ldr	r2, .L8
 235 0086 82FB0312 		smull	r1, r2, r2, r3
 236 008a 5211     		asrs	r2, r2, #5
 237 008c DB17     		asrs	r3, r3, #31
 238 008e D31A     		subs	r3, r2, r3
 239 0090 7B61     		str	r3, [r7, #20]
  20:Core/Src/PWM_Ctrl.c **** 
  21:Core/Src/PWM_Ctrl.c ****    LL_TIM_OC_SetCompareCH1(TIMX, temp);
 240              		.loc 2 21 4
 241 0092 7B69     		ldr	r3, [r7, #20]
 242 0094 1946     		mov	r1, r3
 243 0096 7868     		ldr	r0, [r7, #4]
 244 0098 FFF7FEFF 		bl	LL_TIM_OC_SetCompareCH1
  22:Core/Src/PWM_Ctrl.c **** 
  23:Core/Src/PWM_Ctrl.c ****    // LL_TIM_DisableAllOutputs (TIMX);
  24:Core/Src/PWM_Ctrl.c **** 
  25:Core/Src/PWM_Ctrl.c ****    // LL_TIM_DisableAutomaticOutput (TIMX);
  26:Core/Src/PWM_Ctrl.c **** 
  27:Core/Src/PWM_Ctrl.c ****    // LL_TIM_DisableCounter (TIMX);
  28:Core/Src/PWM_Ctrl.c **** 
  29:Core/Src/PWM_Ctrl.c **** }
 245              		.loc 2 29 1
 246 009c 00BF     		nop
 247 009e 1837     		adds	r7, r7, #24
 248              	.LCFI15:
 249              		.cfi_def_cfa_offset 16
 250 00a0 BD46     		mov	sp, r7
 251              	.LCFI16:
 252              		.cfi_def_cfa_register 13
 253              		@ sp needed
 254 00a2 B0BD     		pop	{r4, r5, r7, pc}
 255              	.L9:
 256              		.align	2
 257              	.L8:
 258 00a4 1F85EB51 		.word	1374389535
 259 00a8 00005940 		.word	1079574528
 260              		.cfi_endproc
 261              	.LFE265:
 263              		.global	__aeabi_i2f
 264              		.global	__aeabi_fmul
 265              		.global	__aeabi_fdiv
 266              		.global	__aeabi_f2iz
 267              		.global	__aeabi_f2d
 268              		.global	__aeabi_dsub
 269              		.section	.text.Set_And_Convert_Duty_Float,"ax",%progbits
 270              		.align	1
 271              		.global	Set_And_Convert_Duty_Float
 272              		.syntax unified
 273              		.thumb
 274              		.thumb_func
 276              	Set_And_Convert_Duty_Float:
 277              	.LFB266:
  30:Core/Src/PWM_Ctrl.c **** 
  31:Core/Src/PWM_Ctrl.c **** void Set_And_Convert_Duty_Float(TIM_TypeDef *TIMX, float duty)
  32:Core/Src/PWM_Ctrl.c **** {
 278              		.loc 2 32 1
ARM GAS  /tmp/cc3R50AM.s 			page 42


 279              		.cfi_startproc
 280              		@ args = 0, pretend = 0, frame = 24
 281              		@ frame_needed = 1, uses_anonymous_args = 0
 282 0000 B0B5     		push	{r4, r5, r7, lr}
 283              	.LCFI17:
 284              		.cfi_def_cfa_offset 16
 285              		.cfi_offset 4, -16
 286              		.cfi_offset 5, -12
 287              		.cfi_offset 7, -8
 288              		.cfi_offset 14, -4
 289 0002 86B0     		sub	sp, sp, #24
 290              	.LCFI18:
 291              		.cfi_def_cfa_offset 40
 292 0004 00AF     		add	r7, sp, #0
 293              	.LCFI19:
 294              		.cfi_def_cfa_register 7
 295 0006 7860     		str	r0, [r7, #4]
 296 0008 3960     		str	r1, [r7]	@ float
  33:Core/Src/PWM_Ctrl.c ****    float v;
  34:Core/Src/PWM_Ctrl.c ****    int temp1;
  35:Core/Src/PWM_Ctrl.c ****    int temp;
  36:Core/Src/PWM_Ctrl.c ****    if (duty > 0)
 297              		.loc 2 36 7
 298 000a 4FF00001 		mov	r1, #0
 299 000e 3868     		ldr	r0, [r7]	@ float
 300 0010 FFF7FEFF 		bl	__aeabi_fcmpgt
 301 0014 0346     		mov	r3, r0
 302 0016 002B     		cmp	r3, #0
 303 0018 4ED0     		beq	.L17
  37:Core/Src/PWM_Ctrl.c ****    {
  38:Core/Src/PWM_Ctrl.c ****       temp = LL_TIM_GetAutoReload (TIMX)+1;
 304              		.loc 2 38 14
 305 001a 7868     		ldr	r0, [r7, #4]
 306 001c FFF7FEFF 		bl	LL_TIM_GetAutoReload
 307 0020 0346     		mov	r3, r0
 308              		.loc 2 38 41
 309 0022 0133     		adds	r3, r3, #1
 310              		.loc 2 38 12
 311 0024 3B61     		str	r3, [r7, #16]
  39:Core/Src/PWM_Ctrl.c ****       temp1 = (duty * temp)/100;
 312              		.loc 2 39 21
 313 0026 3869     		ldr	r0, [r7, #16]
 314 0028 FFF7FEFF 		bl	__aeabi_i2f
 315 002c 0346     		mov	r3, r0
 316 002e 3968     		ldr	r1, [r7]	@ float
 317 0030 1846     		mov	r0, r3
 318 0032 FFF7FEFF 		bl	__aeabi_fmul
 319 0036 0346     		mov	r3, r0
 320              		.loc 2 39 28
 321 0038 2549     		ldr	r1, .L18
 322 003a 1846     		mov	r0, r3
 323 003c FFF7FEFF 		bl	__aeabi_fdiv
 324 0040 0346     		mov	r3, r0
 325              		.loc 2 39 13
 326 0042 1846     		mov	r0, r3
 327 0044 FFF7FEFF 		bl	__aeabi_f2iz
 328 0048 0346     		mov	r3, r0
ARM GAS  /tmp/cc3R50AM.s 			page 43


 329 004a 7B61     		str	r3, [r7, #20]
  40:Core/Src/PWM_Ctrl.c ****       v = (duty/100.0) *temp- temp1; ///////revert cnt
 330              		.loc 2 40 16
 331 004c 3868     		ldr	r0, [r7]	@ float
 332 004e FFF7FEFF 		bl	__aeabi_f2d
 333 0052 4FF00002 		mov	r2, #0
 334 0056 1F4B     		ldr	r3, .L18+4
 335 0058 FFF7FEFF 		bl	__aeabi_ddiv
 336 005c 0246     		mov	r2, r0
 337 005e 0B46     		mov	r3, r1
 338 0060 1446     		mov	r4, r2
 339 0062 1D46     		mov	r5, r3
 340              		.loc 2 40 24
 341 0064 3869     		ldr	r0, [r7, #16]
 342 0066 FFF7FEFF 		bl	__aeabi_i2d
 343 006a 0246     		mov	r2, r0
 344 006c 0B46     		mov	r3, r1
 345 006e 2046     		mov	r0, r4
 346 0070 2946     		mov	r1, r5
 347 0072 FFF7FEFF 		bl	__aeabi_dmul
 348 0076 0246     		mov	r2, r0
 349 0078 0B46     		mov	r3, r1
 350 007a 1446     		mov	r4, r2
 351 007c 1D46     		mov	r5, r3
 352              		.loc 2 40 29
 353 007e 7869     		ldr	r0, [r7, #20]
 354 0080 FFF7FEFF 		bl	__aeabi_i2d
 355 0084 0246     		mov	r2, r0
 356 0086 0B46     		mov	r3, r1
 357 0088 2046     		mov	r0, r4
 358 008a 2946     		mov	r1, r5
 359 008c FFF7FEFF 		bl	__aeabi_dsub
 360 0090 0246     		mov	r2, r0
 361 0092 0B46     		mov	r3, r1
 362              		.loc 2 40 9
 363 0094 1046     		mov	r0, r2
 364 0096 1946     		mov	r1, r3
 365 0098 FFF7FEFF 		bl	__aeabi_d2f
 366 009c 0346     		mov	r3, r0
 367 009e FB60     		str	r3, [r7, #12]	@ float
  41:Core/Src/PWM_Ctrl.c **** 
  42:Core/Src/PWM_Ctrl.c ****       if (v > 0.5)            
 368              		.loc 2 42 10
 369 00a0 4FF07C51 		mov	r1, #1056964608
 370 00a4 F868     		ldr	r0, [r7, #12]	@ float
 371 00a6 FFF7FEFF 		bl	__aeabi_fcmpgt
 372 00aa 0346     		mov	r3, r0
 373 00ac 002B     		cmp	r3, #0
 374 00ae 05D0     		beq	.L13
  43:Core/Src/PWM_Ctrl.c ****       {
  44:Core/Src/PWM_Ctrl.c ****          temp1 +=1;
 375              		.loc 2 44 16
 376 00b0 7B69     		ldr	r3, [r7, #20]
 377 00b2 0133     		adds	r3, r3, #1
 378 00b4 7B61     		str	r3, [r7, #20]
 379 00b6 01E0     		b	.L13
 380              	.L17:
ARM GAS  /tmp/cc3R50AM.s 			page 44


  45:Core/Src/PWM_Ctrl.c ****       }
  46:Core/Src/PWM_Ctrl.c ****    }
  47:Core/Src/PWM_Ctrl.c ****    else
  48:Core/Src/PWM_Ctrl.c ****    {
  49:Core/Src/PWM_Ctrl.c ****       temp1 =0;
 381              		.loc 2 49 13
 382 00b8 0023     		movs	r3, #0
 383 00ba 7B61     		str	r3, [r7, #20]
 384              	.L13:
  50:Core/Src/PWM_Ctrl.c ****    }
  51:Core/Src/PWM_Ctrl.c **** 
  52:Core/Src/PWM_Ctrl.c **** 
  53:Core/Src/PWM_Ctrl.c ****    LL_TIM_OC_SetCompareCH1(TIMX, temp1);
 385              		.loc 2 53 4
 386 00bc 7B69     		ldr	r3, [r7, #20]
 387 00be 1946     		mov	r1, r3
 388 00c0 7868     		ldr	r0, [r7, #4]
 389 00c2 FFF7FEFF 		bl	LL_TIM_OC_SetCompareCH1
  54:Core/Src/PWM_Ctrl.c **** /*
  55:Core/Src/PWM_Ctrl.c ****    LL_TIM_DisableAllOutputs (TIMX);
  56:Core/Src/PWM_Ctrl.c **** 
  57:Core/Src/PWM_Ctrl.c ****    LL_TIM_DisableAutomaticOutput (TIMX);
  58:Core/Src/PWM_Ctrl.c **** 
  59:Core/Src/PWM_Ctrl.c ****    LL_TIM_DisableCounter (TIMX);
  60:Core/Src/PWM_Ctrl.c ****    */
  61:Core/Src/PWM_Ctrl.c **** }
 390              		.loc 2 61 1
 391 00c6 00BF     		nop
 392 00c8 1837     		adds	r7, r7, #24
 393              	.LCFI20:
 394              		.cfi_def_cfa_offset 16
 395 00ca BD46     		mov	sp, r7
 396              	.LCFI21:
 397              		.cfi_def_cfa_register 13
 398              		@ sp needed
 399 00cc B0BD     		pop	{r4, r5, r7, pc}
 400              	.L19:
 401 00ce 00BF     		.align	2
 402              	.L18:
 403 00d0 0000C842 		.word	1120403456
 404 00d4 00005940 		.word	1079574528
 405              		.cfi_endproc
 406              	.LFE266:
 408              		.text
 409              	.Letext0:
 410              		.file 3 "/usr/local/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_default_types.h"
 411              		.file 4 "/usr/local/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h"
 412              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
ARM GAS  /tmp/cc3R50AM.s 			page 45


DEFINED SYMBOLS
                            *ABS*:0000000000000000 PWM_Ctrl.c
     /tmp/cc3R50AM.s:18     .rodata.OFFSET_TAB_CCMRx:0000000000000000 $d
     /tmp/cc3R50AM.s:21     .rodata.OFFSET_TAB_CCMRx:0000000000000000 OFFSET_TAB_CCMRx
     /tmp/cc3R50AM.s:24     .rodata.SHIFT_TAB_OCxx:0000000000000000 $d
     /tmp/cc3R50AM.s:27     .rodata.SHIFT_TAB_OCxx:0000000000000000 SHIFT_TAB_OCxx
     /tmp/cc3R50AM.s:30     .rodata.SHIFT_TAB_ICxx:0000000000000000 $d
     /tmp/cc3R50AM.s:33     .rodata.SHIFT_TAB_ICxx:0000000000000000 SHIFT_TAB_ICxx
     /tmp/cc3R50AM.s:36     .rodata.SHIFT_TAB_CCxP:0000000000000000 $d
     /tmp/cc3R50AM.s:39     .rodata.SHIFT_TAB_CCxP:0000000000000000 SHIFT_TAB_CCxP
     /tmp/cc3R50AM.s:42     .rodata.SHIFT_TAB_OISx:0000000000000000 $d
     /tmp/cc3R50AM.s:45     .rodata.SHIFT_TAB_OISx:0000000000000000 SHIFT_TAB_OISx
     /tmp/cc3R50AM.s:48     .text.LL_TIM_GetAutoReload:0000000000000000 $t
     /tmp/cc3R50AM.s:53     .text.LL_TIM_GetAutoReload:0000000000000000 LL_TIM_GetAutoReload
     /tmp/cc3R50AM.s:93     .text.LL_TIM_OC_SetCompareCH1:0000000000000000 $t
     /tmp/cc3R50AM.s:98     .text.LL_TIM_OC_SetCompareCH1:0000000000000000 LL_TIM_OC_SetCompareCH1
     /tmp/cc3R50AM.s:144    .text.Set_And_Convert_Duty:0000000000000000 $t
     /tmp/cc3R50AM.s:150    .text.Set_And_Convert_Duty:0000000000000000 Set_And_Convert_Duty
     /tmp/cc3R50AM.s:258    .text.Set_And_Convert_Duty:00000000000000a4 $d
     /tmp/cc3R50AM.s:270    .text.Set_And_Convert_Duty_Float:0000000000000000 $t
     /tmp/cc3R50AM.s:276    .text.Set_And_Convert_Duty_Float:0000000000000000 Set_And_Convert_Duty_Float
     /tmp/cc3R50AM.s:403    .text.Set_And_Convert_Duty_Float:00000000000000d0 $d

UNDEFINED SYMBOLS
__aeabi_i2d
__aeabi_ddiv
__aeabi_dmul
__aeabi_d2f
__aeabi_fcmpgt
__aeabi_i2f
__aeabi_fmul
__aeabi_fdiv
__aeabi_f2iz
__aeabi_f2d
__aeabi_dsub
