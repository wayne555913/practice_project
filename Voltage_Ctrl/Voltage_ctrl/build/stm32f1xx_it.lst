ARM GAS  /tmp/ccgDf0rb.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f1xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata.CHANNEL_OFFSET_TAB,"a"
  18              		.align	2
  21              	CHANNEL_OFFSET_TAB:
  22 0000 081C3044 		.ascii	"\010\0340DXl\200"
  22      586C80
  23              		.section	.rodata.OFFSET_TAB_CCMRx,"a"
  24              		.align	2
  27              	OFFSET_TAB_CCMRx:
  28 0000 00000000 		.ascii	"\000\000\000\000\004\004\004"
  28      040404
  29              		.section	.rodata.SHIFT_TAB_OCxx,"a"
  30              		.align	2
  33              	SHIFT_TAB_OCxx:
  34 0000 00000800 		.ascii	"\000\000\010\000\000\000\010"
  34      000008
  35              		.section	.rodata.SHIFT_TAB_ICxx,"a"
  36              		.align	2
  39              	SHIFT_TAB_ICxx:
  40 0000 00000800 		.ascii	"\000\000\010\000\000\000\010"
  40      000008
  41              		.section	.rodata.SHIFT_TAB_CCxP,"a"
  42              		.align	2
  45              	SHIFT_TAB_CCxP:
  46 0000 00020406 		.ascii	"\000\002\004\006\010\012\014"
  46      080A0C
  47              		.section	.rodata.SHIFT_TAB_OISx,"a"
  48              		.align	2
  51              	SHIFT_TAB_OISx:
  52 0000 00010203 		.ascii	"\000\001\002\003\004\005\006"
  52      040506
  53              		.section	.text.NMI_Handler,"ax",%progbits
  54              		.align	1
  55              		.global	NMI_Handler
  56              		.syntax unified
  57              		.thumb
  58              		.thumb_func
  60              	NMI_Handler:
  61              	.LFB684:
  62              		.file 1 "Core/Src/stm32f1xx_it.c"
   1:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f1xx_it.c **** /**
ARM GAS  /tmp/ccgDf0rb.s 			page 2


   3:Core/Src/stm32f1xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f1xx_it.c ****   * @file    stm32f1xx_it.c
   5:Core/Src/stm32f1xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f1xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f1xx_it.c ****   * @attention
   8:Core/Src/stm32f1xx_it.c ****   *
   9:Core/Src/stm32f1xx_it.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/stm32f1xx_it.c ****   * All rights reserved.
  11:Core/Src/stm32f1xx_it.c ****   *
  12:Core/Src/stm32f1xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32f1xx_it.c ****   * in the root directory of this software component.
  14:Core/Src/stm32f1xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32f1xx_it.c ****   *
  16:Core/Src/stm32f1xx_it.c ****   ******************************************************************************
  17:Core/Src/stm32f1xx_it.c ****   */
  18:Core/Src/stm32f1xx_it.c **** /* USER CODE END Header */
  19:Core/Src/stm32f1xx_it.c **** 
  20:Core/Src/stm32f1xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32f1xx_it.c **** #include "main.h"
  22:Core/Src/stm32f1xx_it.c **** #include "stm32f1xx_it.h"
  23:Core/Src/stm32f1xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/stm32f1xx_it.c **** /* USER CODE END Includes */
  26:Core/Src/stm32f1xx_it.c **** 
  27:Core/Src/stm32f1xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN TD */
  29:Core/Src/stm32f1xx_it.c **** 
  30:Core/Src/stm32f1xx_it.c **** /* USER CODE END TD */
  31:Core/Src/stm32f1xx_it.c **** 
  32:Core/Src/stm32f1xx_it.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PD */
  34:Core/Src/stm32f1xx_it.c **** 
  35:Core/Src/stm32f1xx_it.c **** /* USER CODE END PD */
  36:Core/Src/stm32f1xx_it.c **** 
  37:Core/Src/stm32f1xx_it.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PM */
  39:Core/Src/stm32f1xx_it.c **** 
  40:Core/Src/stm32f1xx_it.c **** /* USER CODE END PM */
  41:Core/Src/stm32f1xx_it.c **** 
  42:Core/Src/stm32f1xx_it.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PV */
  44:Core/Src/stm32f1xx_it.c **** 
  45:Core/Src/stm32f1xx_it.c **** /* USER CODE END PV */
  46:Core/Src/stm32f1xx_it.c **** 
  47:Core/Src/stm32f1xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  48:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PFP */
  49:Core/Src/stm32f1xx_it.c **** 
  50:Core/Src/stm32f1xx_it.c **** /* USER CODE END PFP */
  51:Core/Src/stm32f1xx_it.c **** 
  52:Core/Src/stm32f1xx_it.c **** /* Private user code ---------------------------------------------------------*/
  53:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN 0 */
  54:Core/Src/stm32f1xx_it.c **** 
  55:Core/Src/stm32f1xx_it.c **** /* USER CODE END 0 */
  56:Core/Src/stm32f1xx_it.c **** 
  57:Core/Src/stm32f1xx_it.c **** /* External variables --------------------------------------------------------*/
  58:Core/Src/stm32f1xx_it.c **** extern TIM_HandleTypeDef htim6;
  59:Core/Src/stm32f1xx_it.c **** extern UART_HandleTypeDef huart1;
ARM GAS  /tmp/ccgDf0rb.s 			page 3


  60:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN EV */
  61:Core/Src/stm32f1xx_it.c **** 
  62:Core/Src/stm32f1xx_it.c **** /* USER CODE END EV */
  63:Core/Src/stm32f1xx_it.c **** 
  64:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
  65:Core/Src/stm32f1xx_it.c **** /*           Cortex-M3 Processor Interruption and Exception Handlers          */
  66:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
  67:Core/Src/stm32f1xx_it.c **** /**
  68:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Non maskable interrupt.
  69:Core/Src/stm32f1xx_it.c ****   */
  70:Core/Src/stm32f1xx_it.c **** void NMI_Handler(void)
  71:Core/Src/stm32f1xx_it.c **** {
  63              		.loc 1 71 1
  64              		.cfi_startproc
  65              		@ args = 0, pretend = 0, frame = 0
  66              		@ frame_needed = 1, uses_anonymous_args = 0
  67              		@ link register save eliminated.
  68 0000 80B4     		push	{r7}
  69              	.LCFI0:
  70              		.cfi_def_cfa_offset 4
  71              		.cfi_offset 7, -4
  72 0002 00AF     		add	r7, sp, #0
  73              	.LCFI1:
  74              		.cfi_def_cfa_register 7
  75              	.L2:
  72:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  73:Core/Src/stm32f1xx_it.c **** 
  74:Core/Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  75:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  76:Core/Src/stm32f1xx_it.c ****    while (1)
  76              		.loc 1 76 10 discriminator 1
  77 0004 FEE7     		b	.L2
  78              		.cfi_endproc
  79              	.LFE684:
  81              		.section	.text.HardFault_Handler,"ax",%progbits
  82              		.align	1
  83              		.global	HardFault_Handler
  84              		.syntax unified
  85              		.thumb
  86              		.thumb_func
  88              	HardFault_Handler:
  89              	.LFB685:
  77:Core/Src/stm32f1xx_it.c ****   {
  78:Core/Src/stm32f1xx_it.c ****   }
  79:Core/Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  80:Core/Src/stm32f1xx_it.c **** }
  81:Core/Src/stm32f1xx_it.c **** 
  82:Core/Src/stm32f1xx_it.c **** /**
  83:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Hard fault interrupt.
  84:Core/Src/stm32f1xx_it.c ****   */
  85:Core/Src/stm32f1xx_it.c **** void HardFault_Handler(void)
  86:Core/Src/stm32f1xx_it.c **** {
  90              		.loc 1 86 1
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 1, uses_anonymous_args = 0
  94              		@ link register save eliminated.
ARM GAS  /tmp/ccgDf0rb.s 			page 4


  95 0000 80B4     		push	{r7}
  96              	.LCFI2:
  97              		.cfi_def_cfa_offset 4
  98              		.cfi_offset 7, -4
  99 0002 00AF     		add	r7, sp, #0
 100              	.LCFI3:
 101              		.cfi_def_cfa_register 7
 102              	.L4:
  87:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  88:Core/Src/stm32f1xx_it.c **** 
  89:Core/Src/stm32f1xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  90:Core/Src/stm32f1xx_it.c ****   while (1)
 103              		.loc 1 90 9 discriminator 1
 104 0004 FEE7     		b	.L4
 105              		.cfi_endproc
 106              	.LFE685:
 108              		.section	.text.MemManage_Handler,"ax",%progbits
 109              		.align	1
 110              		.global	MemManage_Handler
 111              		.syntax unified
 112              		.thumb
 113              		.thumb_func
 115              	MemManage_Handler:
 116              	.LFB686:
  91:Core/Src/stm32f1xx_it.c ****   {
  92:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  93:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  94:Core/Src/stm32f1xx_it.c ****   }
  95:Core/Src/stm32f1xx_it.c **** }
  96:Core/Src/stm32f1xx_it.c **** 
  97:Core/Src/stm32f1xx_it.c **** /**
  98:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Memory management fault.
  99:Core/Src/stm32f1xx_it.c ****   */
 100:Core/Src/stm32f1xx_it.c **** void MemManage_Handler(void)
 101:Core/Src/stm32f1xx_it.c **** {
 117              		.loc 1 101 1
 118              		.cfi_startproc
 119              		@ args = 0, pretend = 0, frame = 0
 120              		@ frame_needed = 1, uses_anonymous_args = 0
 121              		@ link register save eliminated.
 122 0000 80B4     		push	{r7}
 123              	.LCFI4:
 124              		.cfi_def_cfa_offset 4
 125              		.cfi_offset 7, -4
 126 0002 00AF     		add	r7, sp, #0
 127              	.LCFI5:
 128              		.cfi_def_cfa_register 7
 129              	.L6:
 102:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 103:Core/Src/stm32f1xx_it.c **** 
 104:Core/Src/stm32f1xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 105:Core/Src/stm32f1xx_it.c ****   while (1)
 130              		.loc 1 105 9 discriminator 1
 131 0004 FEE7     		b	.L6
 132              		.cfi_endproc
 133              	.LFE686:
 135              		.section	.text.BusFault_Handler,"ax",%progbits
ARM GAS  /tmp/ccgDf0rb.s 			page 5


 136              		.align	1
 137              		.global	BusFault_Handler
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 142              	BusFault_Handler:
 143              	.LFB687:
 106:Core/Src/stm32f1xx_it.c ****   {
 107:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 108:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 109:Core/Src/stm32f1xx_it.c ****   }
 110:Core/Src/stm32f1xx_it.c **** }
 111:Core/Src/stm32f1xx_it.c **** 
 112:Core/Src/stm32f1xx_it.c **** /**
 113:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Prefetch fault, memory access fault.
 114:Core/Src/stm32f1xx_it.c ****   */
 115:Core/Src/stm32f1xx_it.c **** void BusFault_Handler(void)
 116:Core/Src/stm32f1xx_it.c **** {
 144              		.loc 1 116 1
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 1, uses_anonymous_args = 0
 148              		@ link register save eliminated.
 149 0000 80B4     		push	{r7}
 150              	.LCFI6:
 151              		.cfi_def_cfa_offset 4
 152              		.cfi_offset 7, -4
 153 0002 00AF     		add	r7, sp, #0
 154              	.LCFI7:
 155              		.cfi_def_cfa_register 7
 156              	.L8:
 117:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 118:Core/Src/stm32f1xx_it.c **** 
 119:Core/Src/stm32f1xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 120:Core/Src/stm32f1xx_it.c ****   while (1)
 157              		.loc 1 120 9 discriminator 1
 158 0004 FEE7     		b	.L8
 159              		.cfi_endproc
 160              	.LFE687:
 162              		.section	.text.UsageFault_Handler,"ax",%progbits
 163              		.align	1
 164              		.global	UsageFault_Handler
 165              		.syntax unified
 166              		.thumb
 167              		.thumb_func
 169              	UsageFault_Handler:
 170              	.LFB688:
 121:Core/Src/stm32f1xx_it.c ****   {
 122:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 123:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 124:Core/Src/stm32f1xx_it.c ****   }
 125:Core/Src/stm32f1xx_it.c **** }
 126:Core/Src/stm32f1xx_it.c **** 
 127:Core/Src/stm32f1xx_it.c **** /**
 128:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 129:Core/Src/stm32f1xx_it.c ****   */
 130:Core/Src/stm32f1xx_it.c **** void UsageFault_Handler(void)
ARM GAS  /tmp/ccgDf0rb.s 			page 6


 131:Core/Src/stm32f1xx_it.c **** {
 171              		.loc 1 131 1
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 0
 174              		@ frame_needed = 1, uses_anonymous_args = 0
 175              		@ link register save eliminated.
 176 0000 80B4     		push	{r7}
 177              	.LCFI8:
 178              		.cfi_def_cfa_offset 4
 179              		.cfi_offset 7, -4
 180 0002 00AF     		add	r7, sp, #0
 181              	.LCFI9:
 182              		.cfi_def_cfa_register 7
 183              	.L10:
 132:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 133:Core/Src/stm32f1xx_it.c **** 
 134:Core/Src/stm32f1xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 135:Core/Src/stm32f1xx_it.c ****   while (1)
 184              		.loc 1 135 9 discriminator 1
 185 0004 FEE7     		b	.L10
 186              		.cfi_endproc
 187              	.LFE688:
 189              		.section	.text.SVC_Handler,"ax",%progbits
 190              		.align	1
 191              		.global	SVC_Handler
 192              		.syntax unified
 193              		.thumb
 194              		.thumb_func
 196              	SVC_Handler:
 197              	.LFB689:
 136:Core/Src/stm32f1xx_it.c ****   {
 137:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 138:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 139:Core/Src/stm32f1xx_it.c ****   }
 140:Core/Src/stm32f1xx_it.c **** }
 141:Core/Src/stm32f1xx_it.c **** 
 142:Core/Src/stm32f1xx_it.c **** /**
 143:Core/Src/stm32f1xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 144:Core/Src/stm32f1xx_it.c ****   */
 145:Core/Src/stm32f1xx_it.c **** void SVC_Handler(void)
 146:Core/Src/stm32f1xx_it.c **** {
 198              		.loc 1 146 1
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 0
 201              		@ frame_needed = 1, uses_anonymous_args = 0
 202              		@ link register save eliminated.
 203 0000 80B4     		push	{r7}
 204              	.LCFI10:
 205              		.cfi_def_cfa_offset 4
 206              		.cfi_offset 7, -4
 207 0002 00AF     		add	r7, sp, #0
 208              	.LCFI11:
 209              		.cfi_def_cfa_register 7
 147:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 148:Core/Src/stm32f1xx_it.c **** 
 149:Core/Src/stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 150:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
ARM GAS  /tmp/ccgDf0rb.s 			page 7


 151:Core/Src/stm32f1xx_it.c **** 
 152:Core/Src/stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 153:Core/Src/stm32f1xx_it.c **** }
 210              		.loc 1 153 1
 211 0004 00BF     		nop
 212 0006 BD46     		mov	sp, r7
 213              	.LCFI12:
 214              		.cfi_def_cfa_register 13
 215              		@ sp needed
 216 0008 80BC     		pop	{r7}
 217              	.LCFI13:
 218              		.cfi_restore 7
 219              		.cfi_def_cfa_offset 0
 220 000a 7047     		bx	lr
 221              		.cfi_endproc
 222              	.LFE689:
 224              		.section	.text.DebugMon_Handler,"ax",%progbits
 225              		.align	1
 226              		.global	DebugMon_Handler
 227              		.syntax unified
 228              		.thumb
 229              		.thumb_func
 231              	DebugMon_Handler:
 232              	.LFB690:
 154:Core/Src/stm32f1xx_it.c **** 
 155:Core/Src/stm32f1xx_it.c **** /**
 156:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Debug monitor.
 157:Core/Src/stm32f1xx_it.c ****   */
 158:Core/Src/stm32f1xx_it.c **** void DebugMon_Handler(void)
 159:Core/Src/stm32f1xx_it.c **** {
 233              		.loc 1 159 1
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 0
 236              		@ frame_needed = 1, uses_anonymous_args = 0
 237              		@ link register save eliminated.
 238 0000 80B4     		push	{r7}
 239              	.LCFI14:
 240              		.cfi_def_cfa_offset 4
 241              		.cfi_offset 7, -4
 242 0002 00AF     		add	r7, sp, #0
 243              	.LCFI15:
 244              		.cfi_def_cfa_register 7
 160:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 161:Core/Src/stm32f1xx_it.c **** 
 162:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 163:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 164:Core/Src/stm32f1xx_it.c **** 
 165:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 166:Core/Src/stm32f1xx_it.c **** }
 245              		.loc 1 166 1
 246 0004 00BF     		nop
 247 0006 BD46     		mov	sp, r7
 248              	.LCFI16:
 249              		.cfi_def_cfa_register 13
 250              		@ sp needed
 251 0008 80BC     		pop	{r7}
 252              	.LCFI17:
ARM GAS  /tmp/ccgDf0rb.s 			page 8


 253              		.cfi_restore 7
 254              		.cfi_def_cfa_offset 0
 255 000a 7047     		bx	lr
 256              		.cfi_endproc
 257              	.LFE690:
 259              		.section	.text.PendSV_Handler,"ax",%progbits
 260              		.align	1
 261              		.global	PendSV_Handler
 262              		.syntax unified
 263              		.thumb
 264              		.thumb_func
 266              	PendSV_Handler:
 267              	.LFB691:
 167:Core/Src/stm32f1xx_it.c **** 
 168:Core/Src/stm32f1xx_it.c **** /**
 169:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Pendable request for system service.
 170:Core/Src/stm32f1xx_it.c ****   */
 171:Core/Src/stm32f1xx_it.c **** void PendSV_Handler(void)
 172:Core/Src/stm32f1xx_it.c **** {
 268              		.loc 1 172 1
 269              		.cfi_startproc
 270              		@ args = 0, pretend = 0, frame = 0
 271              		@ frame_needed = 1, uses_anonymous_args = 0
 272              		@ link register save eliminated.
 273 0000 80B4     		push	{r7}
 274              	.LCFI18:
 275              		.cfi_def_cfa_offset 4
 276              		.cfi_offset 7, -4
 277 0002 00AF     		add	r7, sp, #0
 278              	.LCFI19:
 279              		.cfi_def_cfa_register 7
 173:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 174:Core/Src/stm32f1xx_it.c **** 
 175:Core/Src/stm32f1xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 176:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 177:Core/Src/stm32f1xx_it.c **** 
 178:Core/Src/stm32f1xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 179:Core/Src/stm32f1xx_it.c **** }
 280              		.loc 1 179 1
 281 0004 00BF     		nop
 282 0006 BD46     		mov	sp, r7
 283              	.LCFI20:
 284              		.cfi_def_cfa_register 13
 285              		@ sp needed
 286 0008 80BC     		pop	{r7}
 287              	.LCFI21:
 288              		.cfi_restore 7
 289              		.cfi_def_cfa_offset 0
 290 000a 7047     		bx	lr
 291              		.cfi_endproc
 292              	.LFE691:
 294              		.section	.text.SysTick_Handler,"ax",%progbits
 295              		.align	1
 296              		.global	SysTick_Handler
 297              		.syntax unified
 298              		.thumb
 299              		.thumb_func
ARM GAS  /tmp/ccgDf0rb.s 			page 9


 301              	SysTick_Handler:
 302              	.LFB692:
 180:Core/Src/stm32f1xx_it.c **** 
 181:Core/Src/stm32f1xx_it.c **** /**
 182:Core/Src/stm32f1xx_it.c ****   * @brief This function handles System tick timer.
 183:Core/Src/stm32f1xx_it.c ****   */
 184:Core/Src/stm32f1xx_it.c **** void SysTick_Handler(void)
 185:Core/Src/stm32f1xx_it.c **** {
 303              		.loc 1 185 1
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 0
 306              		@ frame_needed = 1, uses_anonymous_args = 0
 307 0000 80B5     		push	{r7, lr}
 308              	.LCFI22:
 309              		.cfi_def_cfa_offset 8
 310              		.cfi_offset 7, -8
 311              		.cfi_offset 14, -4
 312 0002 00AF     		add	r7, sp, #0
 313              	.LCFI23:
 314              		.cfi_def_cfa_register 7
 186:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 187:Core/Src/stm32f1xx_it.c **** 
 188:Core/Src/stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 189:Core/Src/stm32f1xx_it.c ****   HAL_IncTick();
 315              		.loc 1 189 3
 316 0004 FFF7FEFF 		bl	HAL_IncTick
 190:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 191:Core/Src/stm32f1xx_it.c **** 
 192:Core/Src/stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 193:Core/Src/stm32f1xx_it.c **** }
 317              		.loc 1 193 1
 318 0008 00BF     		nop
 319 000a 80BD     		pop	{r7, pc}
 320              		.cfi_endproc
 321              	.LFE692:
 323              		.section	.text.USART1_IRQHandler,"ax",%progbits
 324              		.align	1
 325              		.global	USART1_IRQHandler
 326              		.syntax unified
 327              		.thumb
 328              		.thumb_func
 330              	USART1_IRQHandler:
 331              	.LFB693:
 194:Core/Src/stm32f1xx_it.c **** 
 195:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
 196:Core/Src/stm32f1xx_it.c **** /* STM32F1xx Peripheral Interrupt Handlers                                    */
 197:Core/Src/stm32f1xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 198:Core/Src/stm32f1xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 199:Core/Src/stm32f1xx_it.c **** /* please refer to the startup file (startup_stm32f1xx.s).                    */
 200:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
 201:Core/Src/stm32f1xx_it.c **** 
 202:Core/Src/stm32f1xx_it.c **** /**
 203:Core/Src/stm32f1xx_it.c ****   * @brief This function handles USART1 global interrupt.
 204:Core/Src/stm32f1xx_it.c ****   */
 205:Core/Src/stm32f1xx_it.c **** void USART1_IRQHandler(void)
 206:Core/Src/stm32f1xx_it.c **** {
 332              		.loc 1 206 1
ARM GAS  /tmp/ccgDf0rb.s 			page 10


 333              		.cfi_startproc
 334              		@ args = 0, pretend = 0, frame = 0
 335              		@ frame_needed = 1, uses_anonymous_args = 0
 336 0000 80B5     		push	{r7, lr}
 337              	.LCFI24:
 338              		.cfi_def_cfa_offset 8
 339              		.cfi_offset 7, -8
 340              		.cfi_offset 14, -4
 341 0002 00AF     		add	r7, sp, #0
 342              	.LCFI25:
 343              		.cfi_def_cfa_register 7
 207:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 0 */
 208:Core/Src/stm32f1xx_it.c ****   //unsigned char flag;
 209:Core/Src/stm32f1xx_it.c ****   /* USER CODE END USART1_IRQn 0 */
 210:Core/Src/stm32f1xx_it.c ****   HAL_UART_IRQHandler(&huart1);
 344              		.loc 1 210 3
 345 0004 0248     		ldr	r0, .L16
 346 0006 FFF7FEFF 		bl	HAL_UART_IRQHandler
 211:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 1 */
 212:Core/Src/stm32f1xx_it.c ****   //uart1.RxCpltCallback(&huart1);
 213:Core/Src/stm32f1xx_it.c **** 
 214:Core/Src/stm32f1xx_it.c ****   /* USER CODE END USART1_IRQn 1 */
 215:Core/Src/stm32f1xx_it.c **** }
 347              		.loc 1 215 1
 348 000a 00BF     		nop
 349 000c 80BD     		pop	{r7, pc}
 350              	.L17:
 351 000e 00BF     		.align	2
 352              	.L16:
 353 0010 00000000 		.word	huart1
 354              		.cfi_endproc
 355              	.LFE693:
 357              		.section	.text.TIM6_IRQHandler,"ax",%progbits
 358              		.align	1
 359              		.global	TIM6_IRQHandler
 360              		.syntax unified
 361              		.thumb
 362              		.thumb_func
 364              	TIM6_IRQHandler:
 365              	.LFB694:
 216:Core/Src/stm32f1xx_it.c **** 
 217:Core/Src/stm32f1xx_it.c **** /**
 218:Core/Src/stm32f1xx_it.c ****   * @brief This function handles TIM6 global interrupt.
 219:Core/Src/stm32f1xx_it.c ****   */
 220:Core/Src/stm32f1xx_it.c **** void TIM6_IRQHandler(void)
 221:Core/Src/stm32f1xx_it.c **** {
 366              		.loc 1 221 1
 367              		.cfi_startproc
 368              		@ args = 0, pretend = 0, frame = 0
 369              		@ frame_needed = 1, uses_anonymous_args = 0
 370 0000 80B5     		push	{r7, lr}
 371              	.LCFI26:
 372              		.cfi_def_cfa_offset 8
 373              		.cfi_offset 7, -8
 374              		.cfi_offset 14, -4
 375 0002 00AF     		add	r7, sp, #0
 376              	.LCFI27:
ARM GAS  /tmp/ccgDf0rb.s 			page 11


 377              		.cfi_def_cfa_register 7
 222:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM6_IRQn 0 */
 223:Core/Src/stm32f1xx_it.c **** 
 224:Core/Src/stm32f1xx_it.c ****   /* USER CODE END TIM6_IRQn 0 */
 225:Core/Src/stm32f1xx_it.c ****   HAL_TIM_IRQHandler(&htim6);
 378              		.loc 1 225 3
 379 0004 0248     		ldr	r0, .L19
 380 0006 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 226:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM6_IRQn 1 */
 227:Core/Src/stm32f1xx_it.c **** 
 228:Core/Src/stm32f1xx_it.c **** 
 229:Core/Src/stm32f1xx_it.c **** 
 230:Core/Src/stm32f1xx_it.c **** 
 231:Core/Src/stm32f1xx_it.c **** 
 232:Core/Src/stm32f1xx_it.c **** 
 233:Core/Src/stm32f1xx_it.c **** 
 234:Core/Src/stm32f1xx_it.c **** 
 235:Core/Src/stm32f1xx_it.c **** 
 236:Core/Src/stm32f1xx_it.c **** 
 237:Core/Src/stm32f1xx_it.c ****   /* USER CODE END TIM6_IRQn 1 */
 238:Core/Src/stm32f1xx_it.c **** }
 381              		.loc 1 238 1
 382 000a 00BF     		nop
 383 000c 80BD     		pop	{r7, pc}
 384              	.L20:
 385 000e 00BF     		.align	2
 386              	.L19:
 387 0010 00000000 		.word	htim6
 388              		.cfi_endproc
 389              	.LFE694:
 391              		.text
 392              	.Letext0:
 393              		.file 2 "/usr/local/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_default_types.h"
 394              		.file 3 "/usr/local/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h"
 395              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 396              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 397              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 398              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 399              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 400              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h"
 401              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h"
ARM GAS  /tmp/ccgDf0rb.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_it.c
     /tmp/ccgDf0rb.s:18     .rodata.CHANNEL_OFFSET_TAB:0000000000000000 $d
     /tmp/ccgDf0rb.s:21     .rodata.CHANNEL_OFFSET_TAB:0000000000000000 CHANNEL_OFFSET_TAB
     /tmp/ccgDf0rb.s:24     .rodata.OFFSET_TAB_CCMRx:0000000000000000 $d
     /tmp/ccgDf0rb.s:27     .rodata.OFFSET_TAB_CCMRx:0000000000000000 OFFSET_TAB_CCMRx
     /tmp/ccgDf0rb.s:30     .rodata.SHIFT_TAB_OCxx:0000000000000000 $d
     /tmp/ccgDf0rb.s:33     .rodata.SHIFT_TAB_OCxx:0000000000000000 SHIFT_TAB_OCxx
     /tmp/ccgDf0rb.s:36     .rodata.SHIFT_TAB_ICxx:0000000000000000 $d
     /tmp/ccgDf0rb.s:39     .rodata.SHIFT_TAB_ICxx:0000000000000000 SHIFT_TAB_ICxx
     /tmp/ccgDf0rb.s:42     .rodata.SHIFT_TAB_CCxP:0000000000000000 $d
     /tmp/ccgDf0rb.s:45     .rodata.SHIFT_TAB_CCxP:0000000000000000 SHIFT_TAB_CCxP
     /tmp/ccgDf0rb.s:48     .rodata.SHIFT_TAB_OISx:0000000000000000 $d
     /tmp/ccgDf0rb.s:51     .rodata.SHIFT_TAB_OISx:0000000000000000 SHIFT_TAB_OISx
     /tmp/ccgDf0rb.s:54     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccgDf0rb.s:60     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccgDf0rb.s:82     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccgDf0rb.s:88     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccgDf0rb.s:109    .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccgDf0rb.s:115    .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccgDf0rb.s:136    .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccgDf0rb.s:142    .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccgDf0rb.s:163    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccgDf0rb.s:169    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccgDf0rb.s:190    .text.SVC_Handler:0000000000000000 $t
     /tmp/ccgDf0rb.s:196    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/ccgDf0rb.s:225    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccgDf0rb.s:231    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccgDf0rb.s:260    .text.PendSV_Handler:0000000000000000 $t
     /tmp/ccgDf0rb.s:266    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/ccgDf0rb.s:295    .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccgDf0rb.s:301    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/ccgDf0rb.s:324    .text.USART1_IRQHandler:0000000000000000 $t
     /tmp/ccgDf0rb.s:330    .text.USART1_IRQHandler:0000000000000000 USART1_IRQHandler
     /tmp/ccgDf0rb.s:353    .text.USART1_IRQHandler:0000000000000010 $d
     /tmp/ccgDf0rb.s:358    .text.TIM6_IRQHandler:0000000000000000 $t
     /tmp/ccgDf0rb.s:364    .text.TIM6_IRQHandler:0000000000000000 TIM6_IRQHandler
     /tmp/ccgDf0rb.s:387    .text.TIM6_IRQHandler:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_UART_IRQHandler
huart1
HAL_TIM_IRQHandler
htim6
